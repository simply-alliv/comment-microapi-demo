{"version":3,"sources":["common/enums/comments-action-type.ts","components/Comment/Reply/index.tsx","components/Comment/index.tsx","common/enums/comments-result-type.ts","common/enums/route-path.ts","components/Home/index.tsx","components/App/CustomAppBar/index.tsx","components/App/CustomTabBar/index.tsx","context/comments/middleware.ts","components/TabPanel/index.tsx","components/TabViewIntroSection/index.tsx","common/models/comment.ts","common/models/reply.ts","common/models/route.ts","services/comment/index.ts","context/comments/middleware-helpers.ts","context/comments/index.tsx","components/Comments/CreateComment/index.tsx","components/Comments/GetComment/AllComments/index.tsx","components/CommentSelect/index.tsx","components/Comments/GetComment/SingleComment/index.tsx","components/Comments/GetComment/index.tsx","components/Comments/UpdateComment/index.tsx","components/Comments/DeleteComment/index.tsx","components/Comments/VoteComment/index.tsx","components/Comments/FlagComment/index.tsx","components/CommentDialog/index.tsx","components/StateFooter/index.tsx","components/LoadingScreen/index.tsx","components/Comments/index.tsx","components/Replies/CreateReply/index.tsx","components/Replies/GetReply/AllReplies/index.tsx","components/ReplySelect/index.tsx","components/Replies/GetReply/SingleReply/index.tsx","components/Replies/GetReply/index.tsx","components/Replies/UpdateReply/index.tsx","components/Replies/DeleteReply/index.tsx","components/Replies/VoteReply/index.tsx","components/Replies/FlagReply/index.tsx","components/Replies/index.tsx","theme/index.ts","hooks/useCurrentRoute/index.ts","hooks/useCurrentTabs/index.ts","hooks/useCurrentTabsValue/index.ts","components/App/index.tsx","serviceWorker.js","index.tsx"],"names":["CommentsActionType","useStyles","makeStyles","root","backgroundColor","Reply","reply","classes","Card","variant","className","CardContent","Typography","replyId","slice","content","color","calculateTimeSince","createdAt","Box","pt","Divider","display","justifyContent","alignItems","pr","numOfUpVotes","numOfDownVotes","numOfFlags","width","Comment","comment","replies","Fragment","commentId","py","Grid","container","spacing","map","item","key","creationDate","Date","seconds","Math","floor","valueOf","interval","CommentsResultType","RoutePath","ownerId","numOfVotes","updatedAt","applicationId","numOfReplies","theme","flexGrow","palette","background","paper","Home","Container","maxWidth","align","p","pb","Link","component","RouterLink","to","Comments","Button","CustomAppBar","currentRoute","children","getButtonVariant","path","AppBar","position","Toolbar","IconButton","edge","aria-label","mx","Replies","helper","CustomTabBar","tabLabels","tabValueState","value","setValue","Tabs","onChange","event","newValue","scrollButtons","split","toLowerCase","tabLabel","index","Tab","label","formattedTabLabel","replace","id","a11yProps","TabPanel","tabIndex","activeTabIndex","other","role","hidden","aria-labelledby","mb","TabViewIntroSection","endpoints","heading","subtitle","endpoint","mt","Route","CommentService","sdkInstance","mapDataToComment","data","mapDataToReply","this","CommentSDK","process","init","pageQuery","getAllComments","then","response","records","record","getSingleComment","getCommentVotes","createCommentDTO","createComment","updateCommentDTO","updateCommentContent","deleteSingleComment","upvoteSingleComment","downvoteSingleComment","flagComment","getAllReplies","getSingleReply","getReplyVotes","createReplyDTO","createReply","updateReplyDTO","updateReplyContent","deleteSingleReply","upvoteSingleReply","downvoteSingleReply","flagReply","DispatchMiddlewareHelper","dispatch","isOpen","type","SET_SELECTED_COMMENT_DIALOG_OPEN","payload","ADD_COMMENT","comments","ADD_COMMENTS","updatedComment","UPDATE_COMMENT","REMOVE_COMMENT","ADD_REPLY","ADD_REPLIES","updatedReply","UPDATE_REPLY","REMOVE_REPLY","commentService","initializeState","dispatchMiddleware","action","a","undefined","INIT_STATE","RESET_STATE","SET_SELECTED_COMMENT","SET_SELECTED_REPLY","GET_ALL_COMMENTS","GET_COMMENT","CREATE_COMMENT","DELETE_COMMENT","UPVOTE_COMMENT","DOWNVOTE_COMMENT","FLAG_COMMENT","GET_ALL_REPLIES","GET_REPLY","CREATE_REPLY","DELETE_REPLY","UPVOTE_REPLY","DOWNVOTE_REPLY","FLAG_REPLY","setLoading","sort","commentsRepliesPromises","forEach","push","addComments","Promise","all","commentsReplies","length","addReplies","removeComment","error","console","log","setSelectedCommentDialogOpen","addComment","createSingleComment","updateSingleComment","updateComment","flagSingleComment","addReply","createSingleReply","updateSingleReply","updateReply","removeReply","flagSingleReply","isLoading","SET_LOADING","loading","initialState","selectedComment","selectedCommentReplies","isSelectedCommentDialogOpen","selectedReply","commentsLoaded","repliesLoaded","CommentsContext","createContext","reducer","state","commentExists","find","replyExists","existingReply","updatedState","commentReplies","filter","newComments","splice","filteredComments","filteredReplies","Error","CommentsContextProvider","useReducer","useEffect","dispatchMW","Provider","createComponentEndpoints","CreateComment","useContext","flexDirection","TextareaAutosize","rowsMin","rowsMax","target","disabled","onClick","getAllCommentEndpoint","formControl","margin","minWidth","selectEmpty","marginTop","AllComments","useState","flagState","setFlagState","setOwnerId","refId","setRefId","origin","setOrigin","setSort","page","setPage","xs","FormControl","Select","displayEmpty","inputProps","MenuItem","FormHelperText","_isFlagged","_ownerId","_refId","_origin","_sort","_page","isFlagged","CommentSelect","getSingleCommentEndpoint","SingleComment","GetComment","updateComponentEndpoints","UpdateComment","setContent","deleteComponentEndpoints","DeleteComment","voteComponentEndpoints","voteTypes","VoteComment","selectedVoteType","setSelectedVoteType","voteType","flagComponentEndpoints","FlagComment","button","dialogContentSubtitle","overflowY","CommentDialog","handleOk","title","okLabel","getRepliesForComment","Dialog","open","onClose","scroll","aria-describedby","DialogTitle","DialogContent","DialogContentText","dividers","allComments","DialogActions","fullWidth","bottom","zIndex","backgroundImage","StateFooter","React","setOpen","LoadingScreen","height","CircularProgress","tabViews","element","CreateReply","getAllReplyEndpoint","AllReplies","ReplySelect","getSingleReplyEndpoint","SingleReply","GetReply","UpdateReply","DeleteReply","VoteReply","FlagReply","createMuiTheme","primary","main","secondary","typography","fontFamily","fontSize","textTransform","shape","borderRadius","overrides","MuiCssBaseline","body","html","overflow","useCurrentRoute","useLocation","pathname","commentTabLabels","repliesTabLabels","useCurrentTabs","route","currentTabsLabels","tabsAvailable","useCurrentTabsValue","currentTabsValue","setCurrentTabsValue","commentsTabsValue","setCommentsTabsValue","repliesTabsValue","setRepliesTabsValue","App","ThemeProvider","CssBaseline","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7877c6bd.chunk.js","sourcesContent":["enum CommentsActionType {\n  INIT_STATE,\n  RESET_STATE,\n  SET_SELECTED_COMMENT_DIALOG_OPEN,\n  GET_ALL_COMMENTS,\n  GET_COMMENT,\n  CREATE_COMMENT,\n  UPDATE_COMMENT,\n  SET_SELECTED_COMMENT,\n  UPVOTE_COMMENT,\n  DOWNVOTE_COMMENT,\n  FLAG_COMMENT,\n  DELETE_COMMENT,\n  GET_ALL_REPLIES,\n  GET_REPLY,\n  CREATE_REPLY,\n  UPDATE_REPLY,\n  SET_SELECTED_REPLY,\n  UPVOTE_REPLY,\n  DOWNVOTE_REPLY,\n  FLAG_REPLY,\n  DELETE_REPLY,\n}\n\nexport default CommentsActionType;\n","import React, { FunctionComponent } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { calculateTimeSince } from \"../index\";\nimport { Reply as ReplyModel } from \"../../../common/models\";\n\nexport type ReplyProps = {\n  reply: ReplyModel;\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: \"#FAFAFA\",\n  },\n}));\n\nconst Reply: FunctionComponent<ReplyProps> = ({ reply }) => {\n  const classes = useStyles();\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h6\">{reply.replyId.slice(0, 7)}</Typography>\n        <Typography variant=\"body2\">{reply.content}</Typography>\n        <Typography variant=\"caption\" color=\"textSecondary\">\n          {calculateTimeSince(reply.createdAt)}\n        </Typography>\n        <Box pt={2}></Box>\n        <Divider />\n        <Box pt={2} display=\"flex\" justifyContent=\"space-between\">\n          <Box display=\"flex\" alignItems=\"center\">\n            <Box display=\"flex\" alignItems=\"center\" pr={2}>\n              <Typography color=\"textSecondary\">Upvotes </Typography>\n              <Box pr={1}></Box>\n              <Typography>{`${reply.numOfUpVotes}`}</Typography>\n            </Box>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Typography color=\"textSecondary\">Downvotes</Typography>\n              <Box pr={1}></Box>\n              <Typography>{`${reply.numOfDownVotes}`}</Typography>\n            </Box>\n          </Box>\n          <div>\n            {reply.numOfFlags > 0 ? (\n              <Typography variant=\"caption\" color=\"error\">\n                Flagged\n              </Typography>\n            ) : null}\n          </div>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Reply;\n","import React, { FunctionComponent } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Reply from \"./Reply\";\nimport {\n  Comment as CommentModel,\n  Reply as ReplyModel,\n} from \"../../common/models\";\n\nexport type CommentProps = {\n  comment: CommentModel;\n  replies: ReplyModel[];\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n  },\n}));\n\nconst Comment: FunctionComponent<CommentProps> = ({ comment, replies }) => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h6\">{comment.commentId.slice(0, 7)}</Typography>\n          <Typography variant=\"body2\">{comment.content}</Typography>\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            {calculateTimeSince(comment.createdAt)}\n          </Typography>\n          <Box pt={2}></Box>\n          <Divider />\n          <Box pt={2} display=\"flex\" justifyContent=\"space-between\">\n            <Box display=\"flex\" alignItems=\"center\">\n              <Box display=\"flex\" alignItems=\"center\" pr={2}>\n                <Typography color=\"textSecondary\">Upvotes </Typography>\n                <Box pr={1}></Box>\n                <Typography>{`${comment.numOfUpVotes}`}</Typography>\n              </Box>\n              <Box display=\"flex\" alignItems=\"center\">\n                <Typography color=\"textSecondary\">Downvotes</Typography>\n                <Box pr={1}></Box>\n                <Typography>{`${comment.numOfDownVotes}`}</Typography>\n              </Box>\n            </Box>\n            <div>\n              {comment.numOfFlags > 0 ? (\n                <Typography variant=\"caption\" color=\"error\">\n                  Flagged\n                </Typography>\n              ) : null}\n            </div>\n          </Box>\n        </CardContent>\n      </Card>\n      <Box py={2}>\n        <Grid container spacing={2}>\n          {replies.map((reply: ReplyModel) => {\n            return (\n              <Grid item key={reply.replyId} className={classes.root}>\n                <Reply reply={reply} />\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default Comment;\n\nexport const calculateTimeSince = (createdAt: string) => {\n  const creationDate = new Date(createdAt);\n\n  const seconds = Math.floor(\n    (new Date().valueOf() - creationDate.valueOf()) / 1000\n  );\n\n  let interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return interval + \" years ago\";\n  }\n\n  interval = Math.floor(seconds / 2592000);\n\n  if (interval > 1) {\n    return interval + \" months ago\";\n  }\n\n  interval = Math.floor(seconds / 86400);\n\n  if (interval > 1) {\n    return interval + \" days ago\";\n  }\n\n  interval = Math.floor(seconds / 3600);\n\n  if (interval > 1) {\n    return interval + \" hours ago\";\n  }\n\n  interval = Math.floor(seconds / 60);\n\n  if (interval > 1) {\n    return interval + \" minutes ago\";\n  }\n\n  return Math.floor(seconds) + \" seconds ago\";\n};\n","enum CommentsResultType {\n  SET_LOADING,\n  SET_SELECTED_COMMENT_DIALOG_OPEN,\n  RESET_STATE,\n  SET_SELECTED_COMMENT,\n  ADD_COMMENT,\n  ADD_COMMENTS,\n  UPDATE_COMMENT,\n  UPDATE_COMMENT_UPVOTE,\n  UPDATE_COMMENT_DOWNVOTE,\n  REMOVE_COMMENT,\n  SET_SELECTED_REPLY,\n  ADD_REPLY,\n  ADD_REPLIES,\n  UPDATE_REPLY,\n  UPDATE_REPLY_UPVOTE,\n  UPDATE_REPLY_DOWNVOTE,\n  REMOVE_REPLY,\n}\n\nexport default CommentsResultType;\n","enum RoutePath {\n  Home = \"/comment-microapi-demo\",\n  Comments = \"/comment-microapi-demo/comments\",\n  Replies = \"/comment-microapi-demo/replies\",\n}\n\nexport default RoutePath;\n","import React, { FunctionComponent } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Link from \"@material-ui/core/Link\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Comment from \"../Comment\";\nimport {\n  Comment as CommentModel,\n  Reply as ReplyModel,\n} from \"../../common/models\";\nimport { RoutePath } from \"../../common/enums\";\n\nconst replies: ReplyModel[] = [\n  {\n    commentId: \"5f105031f64edc001eef4abb\",\n    replyId: \"5f10dca328a306001e18b298\",\n    ownerId: \"you@gmail.com\",\n    content:\n      \"Good morning James. That’s right. I will see you then at the Cocoa Cha Chi.\",\n    numOfVotes: 0,\n    numOfUpVotes: 0,\n    numOfDownVotes: 0,\n    numOfFlags: 0,\n    createdAt: \"2020-07-16T22:04:56.945Z\",\n    updatedAt: \"2020-07-17T17:47:10.895Z\",\n  },\n];\n\nconst comment: CommentModel = {\n  commentId: \"5f105031f64edc001eef4abb\",\n  applicationId: \"5f0f51f71b6c9f001ec13f88\",\n  ownerId: \"you@gmail.com\",\n  content:\n    \"Hey, I hope that you are well. I was just looking to confirm our meeting for 10am sharp this morning. Please get back to me as soon as you get this.\",\n  numOfVotes: 0,\n  numOfUpVotes: 0,\n  numOfDownVotes: 0,\n  numOfFlags: 0,\n  numOfReplies: 1,\n  createdAt: \"2020-07-16T13:03:45.782Z\",\n  updatedAt: \"2020-07-17T18:45:04.551Z\",\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst Home: FunctionComponent = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Container maxWidth=\"sm\">\n        <Box pt={6}>\n          <Typography variant=\"h2\" align=\"center\">\n            Unleash the Potential of Comments\n          </Typography>\n        </Box>\n        <Box pt={2}>\n          <Typography variant=\"body1\" align=\"center\">\n            The need to elicit public opinions about predefined topics is\n            widespread in the social sciences, government, and business.\n          </Typography>\n        </Box>\n        <Box p={4}>\n          <Comment comment={comment} replies={replies} />\n        </Box>\n        <Box pb={2} display=\"flex\" justifyContent=\"center\">\n          <Link component={RouterLink} to={RoutePath.Comments}>\n            <Button variant=\"contained\" color=\"secondary\">\n              Live Demo\n            </Button>\n          </Link>\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { FunctionComponent } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { Route } from \"../../../common/models\";\nimport { RoutePath } from \"../../../common/enums\";\nimport {\n  Box,\n  AppBar,\n  Link,\n  Toolbar,\n  Button,\n  IconButton,\n} from \"@material-ui/core\";\n\ntype CustomAppBarProps = {\n  currentRoute: Route;\n  children?: React.ReactNode;\n};\n\nconst CustomAppBar: FunctionComponent<CustomAppBarProps> = ({\n  currentRoute,\n  children,\n}) => {\n  const getButtonVariant = (path: RoutePath) => {\n    return currentRoute.path === path ? \"contained\" : \"outlined\";\n  };\n\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <Box\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          width=\"100%\"\n        >\n          <Link component={RouterLink} to={RoutePath.Home}>\n            <IconButton edge=\"start\" aria-label=\"menu\">\n              <HomeIcon />\n            </IconButton>\n          </Link>\n          <Box display=\"flex\">\n            <Link component={RouterLink} to={RoutePath.Comments}>\n              <Button\n                variant={getButtonVariant(RoutePath.Comments)}\n                color=\"secondary\"\n              >\n                Comments\n              </Button>\n            </Link>\n            <Box mx={1}></Box>\n            <Link component={RouterLink} to={RoutePath.Replies}>\n              <Button\n                variant={getButtonVariant(RoutePath.Replies)}\n                color=\"secondary\"\n              >\n                Replies\n              </Button>\n            </Link>\n          </Box>\n        </Box>\n      </Toolbar>\n      {children}\n    </AppBar>\n  );\n};\n\nexport default CustomAppBar;\n","import React, { FunctionComponent } from \"react\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\ntype TabBarProps = {\n  tabLabels: string[];\n  tabValueState: [number, React.Dispatch<React.SetStateAction<number>>];\n};\n\nfunction a11yProps(tabLabel: string, index: number) {\n  const formattedTabLabel = tabLabel.toLowerCase().replace(/\\s/, \"-\");\n\n  return {\n    id: `${formattedTabLabel}-tab-${index}`,\n    \"aria-controls\": `${formattedTabLabel}-tabpanel-${index}`,\n  };\n}\n\nconst CustomTabBar: FunctionComponent<TabBarProps> = ({\n  tabLabels,\n  tabValueState,\n}) => {\n  const [value, setValue] = tabValueState;\n  const handleChange = (event: any, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Tabs\n      value={value}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"off\"\n      aria-label={`The tabs for the different ${tabLabels[0]\n        .split(\" \")[0]\n        .toLowerCase()} functionalities.`}\n    >\n      {tabLabels.map((tabLabel, index) => {\n        return (\n          <Tab\n            key={tabLabel}\n            label={tabLabel}\n            {...a11yProps(tabLabel, index)}\n          />\n        );\n      })}\n    </Tabs>\n  );\n};\n\nexport default CustomTabBar;\n","import React from \"react\";\nimport CommentService from \"../../services/comment\";\nimport { CommentsActionType, CommentsResultType } from \"../../common/enums\";\nimport { Reply } from \"../../common/models\";\nimport DispatchMiddlewareHelper from \"./middleware-helpers\";\n\nconst commentService = new CommentService();\ncommentService.initializeState(\"you@gmail.com\");\n\nlet helper: DispatchMiddlewareHelper;\n\n/**\n * Middleware for dispatch which performs the async operations of the CommentSDK, if and\n * when required, and then calls the actual dispatch with the results.\n *\n * @param dispatch - the dispatch function\n */\nconst dispatchMiddleware = (dispatch: React.Dispatch<any>) => {\n  return async (action: any) => {\n    if (helper === undefined) {\n      helper = new DispatchMiddlewareHelper(dispatch);\n    }\n\n    switch (action.type) {\n      /**\n       * Initialize all comments and replies dispatch middleware\n       */\n      case CommentsActionType.INIT_STATE: {\n        setLoading(true, dispatch);\n\n        try {\n          const comments = await commentService.getAllComments({\n            sort: \"desc\",\n          });\n\n          const commentsRepliesPromises: Promise<Reply[]>[] = [];\n\n          comments.forEach((comment) => {\n            commentsRepliesPromises.push(\n              commentService.getAllReplies(comment.commentId)\n            );\n          });\n\n          helper.addComments(comments);\n\n          const commentsReplies = await Promise.all(commentsRepliesPromises);\n\n          if (commentsReplies.length > 0) {\n            commentsReplies.forEach((replies) => {\n              helper.addReplies(replies[0]?.commentId, replies);\n            });\n          } else {\n            helper.addReplies(undefined, []);\n          }\n\n          dispatch({\n            type: CommentsResultType.SET_SELECTED_COMMENT,\n            payload: { commentId: comments[0].commentId },\n          });\n        } catch (error) {\n          setLoading(false, dispatch);\n        }\n\n        break;\n      }\n\n      /**\n       * Reset all comments and replies dispatch middleware\n       */\n      case CommentsActionType.RESET_STATE: {\n        setLoading(true, dispatch);\n\n        try {\n          const comments = await commentService.getAllComments();\n\n          comments.forEach((comment) => {\n            helper.removeComment(comment.commentId);\n          });\n\n          dispatch({\n            type: CommentsResultType.RESET_STATE,\n          });\n        } catch (error) {\n          setLoading(false, dispatch);\n        }\n\n        break;\n      }\n\n      /**\n       * Set the selected comment, or reply, dispatch middleware\n       */\n      case CommentsActionType.SET_SELECTED_COMMENT:\n      case CommentsActionType.SET_SELECTED_REPLY: {\n        try {\n          if (action.type === CommentsActionType.SET_SELECTED_COMMENT) {\n            dispatch({\n              type: CommentsResultType.SET_SELECTED_COMMENT,\n              payload: { commentId: action.payload.commentId },\n            });\n          }\n\n          if (action.type === CommentsActionType.SET_SELECTED_REPLY) {\n            dispatch({\n              type: CommentsResultType.SET_SELECTED_REPLY,\n              payload: { replyId: action.payload.replyId },\n            });\n          }\n        } catch (error) {\n          console.log(error);\n        }\n\n        break;\n      }\n\n      /**\n       * Get all comments dispatch middleware\n       */\n      case CommentsActionType.GET_ALL_COMMENTS: {\n        setLoading(true, dispatch);\n\n        try {\n          const pageQuery = action.payload.pageQuery;\n          const comments = await commentService.getAllComments(pageQuery);\n          helper.addComments(comments);\n          helper.setSelectedCommentDialogOpen(true);\n        } catch (error) {\n          setLoading(false, dispatch);\n        }\n\n        break;\n      }\n\n      /**\n       * Get comment dispatch middleware\n       */\n      case CommentsActionType.GET_COMMENT: {\n        setLoading(true, dispatch);\n\n        try {\n          const commentId = action.payload.commentId;\n          const comment = await commentService.getSingleComment(commentId);\n          helper.addComment(comment);\n          helper.setSelectedCommentDialogOpen(true);\n        } catch (error) {\n          setLoading(false, dispatch);\n        }\n\n        break;\n      }\n\n      /**\n       * Create comment dispatch middleware\n       */\n      case CommentsActionType.CREATE_COMMENT: {\n        setLoading(true, dispatch);\n\n        try {\n          const comment = await commentService.createSingleComment(\n            action.payload\n          );\n          helper.addComment(comment);\n          helper.setSelectedCommentDialogOpen(true);\n        } catch (error) {\n          setLoading(false, dispatch);\n        }\n\n        break;\n      }\n\n      /**\n       * Update comment dispatch middleware\n       */\n      case CommentsActionType.UPDATE_COMMENT: {\n        setLoading(true, dispatch);\n\n        try {\n          const { commentId, updateCommentDTO } = action.payload;\n          await commentService.updateSingleComment(commentId, updateCommentDTO);\n          const updatedComment = await commentService.getSingleComment(\n            commentId\n          );\n          helper.updateComment(updatedComment);\n          helper.setSelectedCommentDialogOpen(true);\n        } catch (error) {\n          setLoading(false, dispatch);\n        }\n\n        break;\n      }\n\n      /**\n       * Delete comment dispatch middleware\n       */\n      case CommentsActionType.DELETE_COMMENT: {\n        setLoading(true, dispatch);\n\n        try {\n          const commentId = action.payload.commentId;\n          await commentService.deleteSingleComment(commentId);\n          helper.removeComment(commentId);\n        } catch (error) {\n          console.log(error);\n          setLoading(false, dispatch);\n        }\n\n        break;\n      }\n\n      /**\n       * Upvote comment dispatch middleware\n       */\n      case CommentsActionType.UPVOTE_COMMENT: {\n        setLoading(true, dispatch);\n\n        try {\n          const commentId = action.payload.commentId;\n          await commentService.upvoteSingleComment(commentId);\n          const updatedComment = await commentService.getSingleComment(\n            commentId\n          );\n          helper.updateComment(updatedComment);\n          helper.setSelectedCommentDialogOpen(true);\n        } catch (error) {\n          setLoading(false, dispatch);\n        }\n\n        break;\n      }\n\n      /**\n       * Downvote comment dispatch middleware\n       */\n      case CommentsActionType.DOWNVOTE_COMMENT: {\n        setLoading(true, dispatch);\n\n        try {\n          const commentId = action.payload.commentId;\n          await commentService.downvoteSingleComment(commentId);\n          const updatedComment = await commentService.getSingleComment(\n            commentId\n          );\n          helper.updateComment(updatedComment);\n          helper.setSelectedCommentDialogOpen(true);\n        } catch (error) {\n          setLoading(false, dispatch);\n        }\n\n        break;\n      }\n\n      /**\n       * Flag comment dispatch middleware\n       */\n      case CommentsActionType.FLAG_COMMENT: {\n        setLoading(true, dispatch);\n\n        try {\n          const commentId = action.payload.commentId;\n          await commentService.flagSingleComment(commentId);\n          const updatedComment = await commentService.getSingleComment(\n            commentId\n          );\n          helper.updateComment(updatedComment);\n          helper.setSelectedCommentDialogOpen(true);\n        } catch (error) {\n          setLoading(false, dispatch);\n        }\n\n        break;\n      }\n\n      /** REPLIES */\n\n      /**\n       * Get all replies dispatch middleware\n       */\n      case CommentsActionType.GET_ALL_REPLIES: {\n        setLoading(true, dispatch);\n\n        try {\n          const { commentId, pageQuery } = action.payload;\n          const replies = await commentService.getAllReplies(\n            commentId,\n            pageQuery\n          );\n          helper.addReplies(commentId, replies);\n          helper.setSelectedCommentDialogOpen(true);\n        } catch (error) {\n          setLoading(false, dispatch);\n        }\n\n        break;\n      }\n\n      /**\n       * Get reply dispatch middleware\n       */\n      case CommentsActionType.GET_REPLY: {\n        setLoading(true, dispatch);\n\n        try {\n          const { commentId, replyId } = action.payload;\n          const reply = await commentService.getSingleReply(commentId, replyId);\n          helper.addReply(commentId, reply);\n          helper.setSelectedCommentDialogOpen(true);\n        } catch (error) {\n          setLoading(false, dispatch);\n        }\n\n        break;\n      }\n\n      /**\n       * Create comment dispatch middleware\n       */\n      case CommentsActionType.CREATE_REPLY: {\n        setLoading(true, dispatch);\n\n        try {\n          const { commentId, createReplyDTO } = action.payload;\n          const reply = await commentService.createSingleReply(\n            commentId,\n            createReplyDTO\n          );\n          const updatedComment = await commentService.getSingleComment(\n            commentId\n          );\n          helper.addReply(commentId, reply);\n          helper.updateComment(updatedComment);\n          helper.setSelectedCommentDialogOpen(true);\n        } catch (error) {\n          setLoading(false, dispatch);\n        }\n\n        break;\n      }\n\n      /**\n       * Update reply dispatch middleware\n       */\n      case CommentsActionType.UPDATE_REPLY: {\n        setLoading(true, dispatch);\n\n        try {\n          const { commentId, replyId, updateReplyDTO } = action.payload;\n          await commentService.updateSingleReply(\n            commentId,\n            replyId,\n            updateReplyDTO\n          );\n          const updatedReply = await commentService.getSingleReply(\n            commentId,\n            replyId\n          );\n          const updatedComment = await commentService.getSingleComment(\n            commentId\n          );\n          helper.updateReply(commentId, updatedReply);\n          helper.updateComment(updatedComment);\n          helper.setSelectedCommentDialogOpen(true);\n        } catch (error) {\n          setLoading(false, dispatch);\n        }\n\n        break;\n      }\n\n      /**\n       * Delete reply dispatch middleware\n       */\n      case CommentsActionType.DELETE_REPLY: {\n        setLoading(true, dispatch);\n\n        try {\n          const { commentId, replyId } = action.payload;\n          await commentService.deleteSingleReply(commentId, replyId);\n\n          const updatedComment = await commentService.getSingleComment(\n            commentId\n          );\n\n          helper.removeReply(commentId, replyId);\n          helper.updateComment(updatedComment);\n        } catch (error) {\n          setLoading(false, dispatch);\n        }\n\n        break;\n      }\n\n      /**\n       * Upvote reply dispatch middleware\n       */\n      case CommentsActionType.UPVOTE_REPLY: {\n        setLoading(true, dispatch);\n\n        try {\n          const { commentId, replyId } = action.payload;\n          await commentService.upvoteSingleReply(commentId, replyId);\n          const updatedReply = await commentService.getSingleReply(\n            commentId,\n            replyId\n          );\n          helper.updateReply(commentId, updatedReply);\n          helper.setSelectedCommentDialogOpen(true);\n        } catch (error) {\n          setLoading(false, dispatch);\n          console.log(error);\n        }\n\n        break;\n      }\n\n      /**\n       * Downvote reply dispatch middleware\n       */\n      case CommentsActionType.DOWNVOTE_REPLY: {\n        setLoading(true, dispatch);\n\n        try {\n          const { commentId, replyId } = action.payload;\n          await commentService.downvoteSingleReply(commentId, replyId);\n          const updatedReply = await commentService.getSingleReply(\n            commentId,\n            replyId\n          );\n          helper.updateReply(commentId, updatedReply);\n          helper.setSelectedCommentDialogOpen(true);\n        } catch (error) {\n          setLoading(false, dispatch);\n        }\n\n        break;\n      }\n\n      /**\n       * Flag reply dispatch middleware\n       */\n      case CommentsActionType.FLAG_REPLY: {\n        setLoading(true, dispatch);\n\n        try {\n          const { commentId, replyId } = action.payload;\n          await commentService.flagSingleReply(commentId, replyId);\n          const updatedReply = await commentService.getSingleReply(\n            commentId,\n            replyId\n          );\n          helper.updateReply(commentId, updatedReply);\n          helper.setSelectedCommentDialogOpen(true);\n        } catch (error) {\n          setLoading(false, dispatch);\n          console.log(error);\n        }\n\n        break;\n      }\n\n      default:\n        return dispatch(action);\n    }\n  };\n};\n\nexport default dispatchMiddleware;\n\n/**\n * Dispatches a loading state to the reducer.\n */\nconst setLoading = (isLoading: boolean, dispatch: any) => {\n  dispatch({\n    type: CommentsResultType.SET_LOADING,\n    payload: { loading: isLoading },\n  });\n};\n","import React, { FunctionComponent } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\n\ntype TabPanelProps = {\n  children: any;\n  tabIndex: number;\n  activeTabIndex: number;\n  other?: any;\n};\n\nconst TabPanel: FunctionComponent<TabPanelProps> = ({\n  children,\n  tabIndex,\n  activeTabIndex,\n  other,\n}) => {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={tabIndex !== activeTabIndex}\n      id={`simple-tabpanel-${tabIndex}`}\n      aria-labelledby={`simple-tab-${tabIndex}`}\n      {...other}\n    >\n      {tabIndex === activeTabIndex && (\n        <Box p={2} mb={7}>\n          <Container maxWidth=\"sm\">{children}</Container>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanel;\n","import React, { FunctionComponent } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\ntype TabViewIntroSectionProps = {\n  endpoints: string[];\n  heading: string;\n  subtitle: string;\n};\n\nconst TabViewIntroSection: FunctionComponent<TabViewIntroSectionProps> = ({\n  endpoints,\n  heading,\n  subtitle,\n}) => {\n  return (\n    <React.Fragment>\n      {endpoints.map((endpoint) => (\n        <Typography\n          key={endpoint}\n          variant=\"body2\"\n          align=\"center\"\n          color=\"textSecondary\"\n        >\n          {endpoint}\n        </Typography>\n      ))}\n      <Box mt={6}>\n        <Typography variant=\"h4\" align=\"center\">\n          {heading}\n        </Typography>\n      </Box>\n      <Box mt={2}>\n        <Typography variant=\"body1\" align=\"center\">\n          {subtitle}\n        </Typography>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default TabViewIntroSection;\n","// Direct representation of the Comment abject from the Comment API\nclass Comment {\n  constructor(\n    public applicationId: string,\n    public commentId: string,\n    public ownerId: string,\n    public content: string,\n    public numOfVotes: number,\n    public numOfUpVotes: number,\n    public numOfDownVotes: number,\n    public numOfFlags: number,\n    public numOfReplies: number,\n    public createdAt: string,\n    public updatedAt: string\n  ) {}\n}\n\nexport default Comment;\n","// Direct representation of the Reply abject from the Comment API\nclass Reply {\n  constructor(\n    public commentId: string,\n    public replyId: string,\n    public ownerId: string,\n    public content: string,\n    public numOfVotes: number,\n    public numOfUpVotes: number,\n    public numOfDownVotes: number,\n    public numOfFlags: number,\n    public createdAt: string,\n    public updatedAt: string\n  ) {}\n}\n\nexport default Reply;\n","import { RoutePath } from \"../enums\";\n\nclass Route {\n  constructor(public path: RoutePath) {}\n}\n\nexport default Route;\n","import CommentSDK from \"comments-microapi-sdk\";\nimport { Comment, Reply } from \"../../common/models\";\n\nconst commentApplicationToken =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcHBsaWNhdGlvbklkIjoiNWYwZjUxZjcxYjZjOWYwMDFlYzEzZjg4IiwiYWRtaW5JZCI6IjVmMGY1MWJlMWI2YzlmMDAxZWMxM2Y4NyIsImlhdCI6MTU5NDgzOTU0MywiZXhwIjoxNTk3NDMxNTQzfQ.IbeXp7eBI1E9HleuC1YjkQPa2NrXJoiFX8Is2ZHa6_A\";\n\nclass CommentService {\n  private sdkInstance: any;\n  private ownerId: string = \"\";\n\n  constructor() {\n    this.sdkInstance = new CommentSDK(\n      process.env.REACT_APP_COMMENTS_API_APP_TOKEN ?? commentApplicationToken\n    );\n    this.sdkInstance.init();\n  }\n\n  async initializeState(ownerId: string) {\n    this.ownerId = ownerId;\n  }\n\n  getAllComments(pageQuery?: any): Promise<Comment[]> {\n    return this.sdkInstance.getAllComments(pageQuery).then((response: any) => {\n      return response.records.map((record: any) =>\n        this.mapDataToComment(record)\n      );\n    });\n  }\n\n  getSingleComment(commentId: string): Promise<Comment> {\n    return this.sdkInstance\n      .getSingleComment(commentId)\n      .then((response: any) => {\n        return this.mapDataToComment(response.data);\n      });\n  }\n\n  getSingleCommentVotes(commentId: string): any {\n    return this.sdkInstance.getCommentVotes(commentId);\n  }\n\n  createSingleComment(createCommentDTO: { content: string }): Promise<Comment> {\n    return this.sdkInstance\n      .createComment({\n        ...createCommentDTO,\n        ownerId: this.ownerId,\n      })\n      .then((response: any) => {\n        return this.mapDataToComment(response.data);\n      });\n  }\n\n  updateSingleComment(\n    commentId: string,\n    updateCommentDTO: { content: string }\n  ): any {\n    return this.sdkInstance.updateCommentContent(commentId, {\n      ...updateCommentDTO,\n      ownerId: this.ownerId,\n    });\n  }\n\n  deleteSingleComment(commentId: string): any {\n    return this.sdkInstance.deleteSingleComment(commentId, this.ownerId);\n  }\n\n  upvoteSingleComment(commentId: string): any {\n    return this.sdkInstance.upvoteSingleComment(commentId, this.ownerId);\n  }\n\n  downvoteSingleComment(commentId: string): any {\n    return this.sdkInstance.downvoteSingleComment(commentId, this.ownerId);\n  }\n\n  flagSingleComment(commentId: string): any {\n    return this.sdkInstance.flagComment(commentId, this.ownerId);\n  }\n\n  /** REPLIES */\n  getAllReplies(commentId: string, pageQuery?: any): Promise<Reply[]> {\n    return this.sdkInstance\n      .getAllReplies(commentId, pageQuery)\n      .then((response: any) => {\n        return response.records.map((record: any) =>\n          this.mapDataToReply(record)\n        );\n      });\n  }\n\n  getSingleReply(commentId: string, replyId: string): Promise<Reply> {\n    return this.sdkInstance\n      .getSingleReply(commentId, replyId)\n      .then((response: any) => {\n        return this.mapDataToReply(response.data);\n      });\n  }\n\n  getSingleReplyVotes(commentId: string, replyId: string): any {\n    return this.sdkInstance.getReplyVotes(commentId, replyId);\n  }\n\n  createSingleReply(\n    commentId: string,\n    createReplyDTO: { content: string }\n  ): Promise<Reply> {\n    return this.sdkInstance\n      .createReply(commentId, {\n        ...createReplyDTO,\n        ownerId: this.ownerId,\n      })\n      .then((response: any) => {\n        return this.mapDataToReply(response.data);\n      });\n  }\n\n  updateSingleReply(\n    commentId: string,\n    replyId: string,\n    updateReplyDTO: { content: string }\n  ): any {\n    return this.sdkInstance.updateReplyContent(commentId, replyId, {\n      ...updateReplyDTO,\n      ownerId: this.ownerId,\n    });\n  }\n\n  deleteSingleReply(commentId: string, replyId: string): any {\n    return this.sdkInstance.deleteSingleReply(commentId, replyId);\n  }\n\n  upvoteSingleReply(commentId: string, replyId: string): any {\n    return this.sdkInstance.upvoteSingleReply(commentId, replyId, this.ownerId);\n  }\n\n  downvoteSingleReply(commentId: string, replyId: string): any {\n    return this.sdkInstance.downvoteSingleReply(\n      commentId,\n      replyId,\n      this.ownerId\n    );\n  }\n\n  flagSingleReply(commentId: string, replyId: string): any {\n    return this.sdkInstance.flagReply(commentId, replyId, this.ownerId);\n  }\n\n  private mapDataToComment = (data: any) => {\n    return new Comment(\n      data.applicationId,\n      data.commentId,\n      data.ownerId,\n      data.content,\n      data.numOfVotes,\n      data.numOfUpVotes,\n      data.numOfDownVotes,\n      data.numOfFlags,\n      data.numOfReplies,\n      data.createdAt,\n      data.updatedAt\n    );\n  };\n\n  private mapDataToReply = (data: any) => {\n    return new Reply(\n      data.commentId,\n      data.replyId,\n      data.ownerId,\n      data.content,\n      data.numOfVotes,\n      data.numOfUpVotes,\n      data.numOfDownVotes,\n      data.numOfFlags,\n      data.createdAt,\n      data.updatedAt\n    );\n  };\n}\n\nexport default CommentService;\n","import React from \"react\";\nimport { Comment, Reply } from \"../../common/models\";\nimport { CommentsResultType } from \"../../common/enums\";\n\n/**\n * Provides helper functions for dispatch middleware.\n */\nclass DispatchMiddlewareHelper {\n  constructor(private dispatch: React.Dispatch<any>) {}\n\n  setSelectedCommentDialogOpen(isOpen: boolean) {\n    this.dispatch({\n      type: CommentsResultType.SET_SELECTED_COMMENT_DIALOG_OPEN,\n      payload: { isOpen },\n    });\n  }\n\n  addComment(comment: Comment) {\n    this.dispatch({\n      type: CommentsResultType.ADD_COMMENT,\n      payload: { comment },\n    });\n  }\n\n  addComments(comments: Comment[]) {\n    this.dispatch({\n      type: CommentsResultType.ADD_COMMENTS,\n      payload: { comments },\n    });\n  }\n\n  updateComment(updatedComment: Comment) {\n    this.dispatch({\n      type: CommentsResultType.UPDATE_COMMENT,\n      payload: { updatedComment },\n    });\n  }\n\n  removeComment(commentId: string) {\n    this.dispatch({\n      type: CommentsResultType.REMOVE_COMMENT,\n      payload: { commentId },\n    });\n  }\n\n  addReply(commentId: string, reply: Reply) {\n    this.dispatch({\n      type: CommentsResultType.ADD_REPLY,\n      payload: { commentId, reply },\n    });\n  }\n\n  addReplies(commentId: string | undefined, replies: Reply[]) {\n    this.dispatch({\n      type: CommentsResultType.ADD_REPLIES,\n      payload: {\n        commentId,\n        replies,\n      },\n    });\n  }\n\n  updateReply(commentId: string, updatedReply: Reply) {\n    this.dispatch({\n      type: CommentsResultType.UPDATE_REPLY,\n      payload: {\n        commentId,\n        updatedReply,\n      },\n    });\n  }\n\n  removeReply(commentId: string, replyId: string) {\n    this.dispatch({\n      type: CommentsResultType.REMOVE_REPLY,\n      payload: { commentId, replyId },\n    });\n  }\n}\n\nexport default DispatchMiddlewareHelper;\n","import React, {\n  FunctionComponent,\n  createContext,\n  useReducer,\n  useEffect,\n} from \"react\";\nimport dispatchMiddleware from \"./middleware\";\nimport { Comment, Reply } from \"../../common/models\";\nimport { CommentsActionType, CommentsResultType } from \"../../common/enums\";\n\n// State\nexport interface State {\n  comments: Comment[];\n  replies: Reply[];\n  selectedComment?: Comment;\n  selectedCommentReplies?: Reply[];\n  isSelectedCommentDialogOpen: boolean;\n  selectedReply?: Reply;\n  commentsLoaded: boolean;\n  repliesLoaded: boolean;\n  loading: boolean;\n}\n\nconst initialState: State = {\n  comments: [],\n  replies: [],\n  selectedComment: undefined,\n  selectedCommentReplies: undefined,\n  isSelectedCommentDialogOpen: false,\n  selectedReply: undefined,\n  commentsLoaded: false,\n  repliesLoaded: false,\n  loading: false,\n};\n\n// Creat Context Object\nexport const CommentsContext = createContext<\n  [\n    State,\n    React.Dispatch<{\n      type: CommentsActionType | CommentsResultType;\n      payload?: any;\n    }>\n  ]\n>([initialState, () => null]);\n\nconst reducer = (state: State, action: any) => {\n  // The reducer can be called twice for the same dispatch so a check to see\n  // if the comment or reply has been added already is required.\n  //\n  // Proper fix needed.\n  //\n  // See issue: https://github.com/facebook/react/issues/16295\n  const commentExists = (commentId: string): boolean => {\n    const existingComment = state.comments.find(\n      (comment) => comment.commentId === commentId\n    );\n\n    return existingComment ? true : false;\n  };\n\n  const replyExists = (commentId: string, replyId: string): boolean => {\n    let existingReply = undefined;\n\n    if (commentExists(commentId)) {\n      existingReply = state.replies.find((reply) => reply.replyId === replyId);\n    }\n\n    return existingReply ? true : false;\n  };\n\n  // The switch block for the reducer actions.\n  switch (action.type) {\n    // Comments reducers\n    case CommentsResultType.SET_SELECTED_COMMENT: {\n      const commentId = action.payload.commentId;\n\n      let updatedState: State = { ...state };\n\n      if (state.selectedComment?.commentId !== commentId) {\n        const comment = state.comments.find(\n          (comment) => comment.commentId === commentId\n        );\n\n        const commentReplies = state.replies.filter(\n          (reply) => reply.commentId === commentId\n        );\n\n        updatedState = {\n          ...state,\n          selectedComment: comment,\n          selectedCommentReplies: commentReplies,\n        };\n      }\n\n      return updatedState;\n    }\n\n    case CommentsResultType.SET_SELECTED_COMMENT_DIALOG_OPEN: {\n      const updatedState = {\n        ...state,\n        isSelectedCommentDialogOpen: action.payload.isOpen,\n      };\n\n      return updatedState;\n    }\n\n    case CommentsResultType.ADD_COMMENT: {\n      const comment = action.payload.comment;\n\n      if (!commentExists(comment.commentId)) {\n        state.comments.push(comment);\n      }\n\n      const updatedState = {\n        ...state,\n        selectedComment: comment,\n        loading: false,\n      };\n\n      return updatedState;\n    }\n\n    case CommentsResultType.ADD_COMMENTS: {\n      const newComments = action.payload.comments;\n\n      const updatedState = {\n        ...state,\n        comments: newComments,\n        selectedComment: undefined,\n        commentsLoaded: true,\n        loading: false,\n      };\n\n      return updatedState;\n    }\n\n    case CommentsResultType.UPDATE_COMMENT: {\n      const updatedComment = action.payload.updatedComment;\n      if (commentExists(updatedComment.commentId)) {\n        state.comments.forEach((comment, index) => {\n          if (comment.commentId === updatedComment.commentId) {\n            state.comments.splice(index, 1, updatedComment);\n          }\n        });\n      }\n\n      const updatedState = {\n        ...state,\n        loading: false,\n      };\n\n      return updatedState;\n    }\n\n    case CommentsResultType.REMOVE_COMMENT: {\n      const filteredComments = state.comments.filter(\n        (comment) => comment.commentId !== action.payload.commentId\n      );\n\n      const updatedState = {\n        ...state,\n        comments: filteredComments,\n        selectedComment: undefined,\n        loading: false,\n      };\n\n      return updatedState;\n    }\n\n    // Replies reducers\n    case CommentsResultType.SET_SELECTED_REPLY: {\n      const replyId = action.payload.replyId;\n\n      let updatedState: State = { ...state };\n\n      if (state.selectedReply?.replyId !== replyId) {\n        const reply = state.replies.find((reply) => reply.replyId === replyId);\n\n        updatedState = {\n          ...state,\n          selectedReply: reply,\n        };\n      }\n\n      return updatedState;\n    }\n\n    case CommentsResultType.ADD_REPLY: {\n      const { commentId, reply } = action.payload;\n\n      if (!replyExists(commentId, reply.replyId)) {\n        state.replies.push(reply);\n      }\n\n      const updatedState = {\n        ...state,\n        selectedReply: reply,\n        loading: false,\n      };\n\n      return updatedState;\n    }\n\n    case CommentsResultType.ADD_REPLIES: {\n      const { commentId, replies } = action.payload;\n\n      if (commentId) {\n        replies.forEach((reply: Reply) => {\n          if (!replyExists(commentId, reply.replyId)) {\n            state.replies.push(reply);\n          }\n        });\n      }\n\n      const updatedState = {\n        ...state,\n        repliesLoaded: true,\n        loading: false,\n      };\n\n      return updatedState;\n    }\n\n    case CommentsResultType.UPDATE_REPLY: {\n      const { commentId, updatedReply } = action.payload;\n\n      if (replyExists(commentId, updatedReply.replyId)) {\n        state.replies.forEach((reply, index) => {\n          if (reply.replyId === updatedReply.replyId) {\n            state.replies.splice(index, 1, updatedReply);\n          }\n        });\n      }\n\n      const updatedState = {\n        ...state,\n        loading: false,\n      };\n\n      return updatedState;\n    }\n\n    case CommentsResultType.REMOVE_REPLY: {\n      const { replyId } = action.payload;\n\n      const filteredReplies = state.replies.filter(\n        (reply) => reply.replyId !== replyId\n      );\n\n      const updatedState = {\n        ...state,\n        replies: filteredReplies,\n        selectedReply: undefined,\n        loading: false,\n      };\n\n      return updatedState;\n    }\n\n    case CommentsResultType.SET_LOADING: {\n      const updatedState = {\n        ...state,\n        loading: action.payload.loading,\n      };\n\n      return updatedState;\n    }\n\n    case CommentsResultType.RESET_STATE: {\n      return initialState;\n    }\n\n    default:\n      throw new Error();\n  }\n};\n\ntype CommentsContextProviderProps = {\n  children?: React.ReactNode;\n};\n// Create a provider for components to consume and subscribe to changes\nexport const CommentsContextProvider: FunctionComponent<CommentsContextProviderProps> = ({\n  children,\n}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    if (!(state.commentsLoaded && state.repliesLoaded)) {\n      const dispatchMW = dispatchMiddleware(dispatch);\n\n      dispatchMW({ type: CommentsActionType.INIT_STATE });\n    }\n  }, [state.commentsLoaded, state.repliesLoaded]);\n\n  return (\n    <CommentsContext.Provider value={[state, dispatchMiddleware(dispatch)]}>\n      {children}\n    </CommentsContext.Provider>\n  );\n};\n","import React, { FunctionComponent, useContext } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport Button from \"@material-ui/core/Button\";\nimport TabViewIntroSection from \"../../TabViewIntroSection\";\nimport { CommentsContext } from \"../../../context/comments\";\nimport { CommentsActionType } from \"../../../common/enums\";\n\nconst createComponentEndpoints = [\"POST /comments\"];\nconst createComponentHeading = \"Create a comment\";\nconst createComponentSubtitle =\n  \"The first step is to always create the comment.\";\n\nconst CreateComment: FunctionComponent = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n  let content = \"\";\n\n  const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    content = event.target.value;\n  };\n\n  const handleCreateCommentClick = () => {\n    dispatch({\n      type: CommentsActionType.CREATE_COMMENT,\n      payload: { content },\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <TabViewIntroSection\n        endpoints={createComponentEndpoints}\n        heading={createComponentHeading}\n        subtitle={createComponentSubtitle}\n      ></TabViewIntroSection>\n      <Box mt={6}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          What are you thinking about? Write it in the box below.\n        </Typography>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" mt={1}>\n        <TextareaAutosize\n          rowsMin={5}\n          rowsMax={5}\n          onChange={handleChange}\n        ></TextareaAutosize>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={4}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={state.loading}\n          onClick={handleCreateCommentClick}\n        >\n          {state.loading ? \"Please Wait...\" : \"Create Comment\"}\n        </Button>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default CreateComment;\n","import React, { FunctionComponent, useState, useContext } from \"react\";\nimport {\n  Box,\n  Button,\n  Grid,\n  makeStyles,\n  Typography,\n  FormControl,\n  Select,\n  FormHelperText,\n  MenuItem,\n} from \"@material-ui/core\";\nimport TabViewIntroSection from \"../../../TabViewIntroSection\";\nimport { CommentsContext } from \"../../../../context/comments\";\nimport { CommentsActionType } from \"../../../../common/enums\";\n\nconst getAllCommentEndpoint = [\"GET /comments\"];\nconst getAllCommentHeading = \"GET all comments\";\nconst getAllCommentSubtitle = \"Need to get some comments?\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst NO_STATE = 0;\nconst FLAGGED_STATE = 1;\nconst UNFLAGGED_STATE = 2;\nconst ALL_OWNERS = \"\";\nconst ALL_REFS = \"\";\nconst ALL_ORIGINS = \"\";\nconst NO_SORT = \"\";\nconst NO_PAGE = \"\";\n\nconst AllComments: FunctionComponent = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n  const [flagState, setFlagState] = useState(NO_STATE);\n  const [ownerId, setOwnerId] = useState(ALL_OWNERS);\n  const [refId, setRefId] = useState(ALL_REFS);\n  const [origin, setOrigin] = useState(ALL_ORIGINS);\n  const [sort, setSort] = useState(NO_SORT);\n  const [page, setPage] = useState(NO_PAGE);\n\n  const classes = useStyles();\n\n  const handleSelectedFlagStateChange = (event: React.ChangeEvent<any>) => {\n    setFlagState(event.target.value);\n  };\n\n  const handleSelectedOwnerIdChange = (event: React.ChangeEvent<any>) => {\n    setOwnerId(event.target.value);\n  };\n\n  const handleSelectedRefIdChange = (event: React.ChangeEvent<any>) => {\n    setRefId(event.target.value);\n  };\n\n  const handleSelectedOriginChange = (event: React.ChangeEvent<any>) => {\n    setOrigin(event.target.value);\n  };\n\n  const handleSelectedSortChange = (event: React.ChangeEvent<any>) => {\n    setSort(event.target.value);\n  };\n\n  const handleSelectedPageChange = (event: React.ChangeEvent<any>) => {\n    setPage(event.target.value);\n  };\n\n  const handleGetAllCommentsClick = () => {\n    let _isFlagged;\n    let _ownerId;\n    let _refId;\n    let _origin;\n    let _sort;\n    let _page;\n\n    if (flagState !== NO_STATE) {\n      _isFlagged = flagState === FLAGGED_STATE;\n    }\n\n    if (ownerId !== ALL_OWNERS) {\n      _ownerId = ownerId;\n    }\n\n    if (refId !== ALL_REFS) {\n      _refId = refId;\n    }\n\n    if (origin !== ALL_ORIGINS) {\n      _origin = origin;\n    }\n\n    if (sort !== NO_SORT) {\n      _sort = sort;\n    }\n\n    if (page !== NO_PAGE) {\n      _page = page;\n    }\n\n    dispatch({\n      type: CommentsActionType.GET_ALL_COMMENTS,\n      payload: {\n        pageQuery: {\n          isFlagged: _isFlagged,\n          ownerId: _ownerId,\n          refId: _refId,\n          origin: _origin,\n          sort: _sort,\n          page: _page,\n        },\n      },\n    });\n  };\n\n  return (\n    <Box>\n      <TabViewIntroSection\n        endpoints={getAllCommentEndpoint}\n        heading={getAllCommentHeading}\n        subtitle={getAllCommentSubtitle}\n      ></TabViewIntroSection>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Need to filter on a list of comments? No problem.\n        </Typography>\n      </Box>\n      <Grid container spacing={2}>\n        <Grid className={classes.root} item xs={6}>\n          <FormControl className={classes.formControl}>\n            <Select\n              value={flagState}\n              onChange={handleSelectedFlagStateChange}\n              displayEmpty\n              className={classes.selectEmpty}\n              inputProps={{ \"aria-label\": \"selected flag state\" }}\n            >\n              <MenuItem value={NO_STATE}>All</MenuItem>\n              <MenuItem value={FLAGGED_STATE}>Flagged</MenuItem>\n              <MenuItem value={UNFLAGGED_STATE}>Unflagged</MenuItem>\n            </Select>\n            <FormHelperText>By Flag State</FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid className={classes.root} item xs={6}>\n          <FormControl className={classes.formControl}>\n            <Select\n              value={ownerId}\n              onChange={handleSelectedOwnerIdChange}\n              displayEmpty\n              className={classes.selectEmpty}\n              inputProps={{ \"aria-label\": \"selected owner ID\" }}\n            >\n              <MenuItem value={ALL_OWNERS}>All</MenuItem>\n              <MenuItem value=\"you@gmail.com\">you@gmail.com</MenuItem>\n            </Select>\n            <FormHelperText>By Owner ID</FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid className={classes.root} item xs={6}>\n          <FormControl className={classes.formControl}>\n            <Select\n              value={origin}\n              onChange={handleSelectedOriginChange}\n              displayEmpty\n              className={classes.selectEmpty}\n              inputProps={{ \"aria-label\": \"selected origin\" }}\n            >\n              <MenuItem value={ALL_ORIGINS}>All</MenuItem>\n            </Select>\n            <FormHelperText>By Origin</FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid className={classes.root} item xs={6}>\n          <FormControl className={classes.formControl}>\n            <Select\n              value={refId}\n              onChange={handleSelectedRefIdChange}\n              displayEmpty\n              className={classes.selectEmpty}\n              inputProps={{ \"aria-label\": \"selected ref ID\" }}\n            >\n              <MenuItem value={ALL_REFS}>All</MenuItem>\n            </Select>\n            <FormHelperText>By Reference ID</FormHelperText>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Or do you need to sort or paginate on a list of comments? Still not a\n          problem.\n        </Typography>\n      </Box>\n      <Grid container spacing={2}>\n        <Grid className={classes.root} item xs={6}>\n          <FormControl className={classes.formControl}>\n            <Select\n              value={sort}\n              onChange={handleSelectedSortChange}\n              displayEmpty\n              className={classes.selectEmpty}\n              inputProps={{ \"aria-label\": \"selected sort\" }}\n            >\n              <MenuItem value={NO_SORT}>None</MenuItem>\n              <MenuItem value=\"asc\">Ascending</MenuItem>\n              <MenuItem value=\"desc\">Descending</MenuItem>\n            </Select>\n            <FormHelperText>Sort</FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid className={classes.root} item xs={6}>\n          <FormControl className={classes.formControl}>\n            <Select\n              value={page}\n              onChange={handleSelectedPageChange}\n              displayEmpty\n              className={classes.selectEmpty}\n              inputProps={{ \"aria-label\": \"selected page\" }}\n            >\n              <MenuItem value={NO_PAGE}>None</MenuItem>\n            </Select>\n            <FormHelperText>Page</FormHelperText>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={6}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={state.loading}\n          onClick={handleGetAllCommentsClick}\n        >\n          {state.loading ? \"Please Wait...\" : \"Get All Comments\"}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AllComments;\n","import React, { FunctionComponent, useContext } from \"react\";\nimport {\n  makeStyles,\n  FormControl,\n  FormHelperText,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { Comment } from \"../../common/models\";\nimport { CommentsContext } from \"../../context/comments\";\nimport { CommentsActionType } from \"../../common/enums\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst CommentSelect: FunctionComponent = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n\n  const classes = useStyles();\n\n  const handleSelectedCommentChange = (event: React.ChangeEvent<any>) => {\n    dispatch({\n      type: CommentsActionType.SET_SELECTED_COMMENT,\n      payload: { commentId: event.target.value },\n    });\n  };\n\n  return (\n    <FormControl className={classes.formControl}>\n      <Select\n        value={state.selectedComment?.commentId ?? \"\"}\n        onChange={handleSelectedCommentChange}\n        displayEmpty\n        className={classes.selectEmpty}\n        inputProps={{ \"aria-label\": \"selected comment ID\" }}\n      >\n        {state.comments.map((comment: Comment) => {\n          return (\n            <MenuItem value={comment.commentId} key={comment.commentId}>\n              {comment.commentId.slice(0, 7)}\n            </MenuItem>\n          );\n        })}\n      </Select>\n      <FormHelperText>Selected Comment</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default CommentSelect;\n","import React, { FunctionComponent, useContext } from \"react\";\nimport { Box, Button, Typography } from \"@material-ui/core\";\nimport TabViewIntroSection from \"../../../TabViewIntroSection\";\nimport CommentSelect from \"../../../CommentSelect\";\nimport { CommentsContext } from \"../../../../context/comments\";\nimport { CommentsActionType } from \"../../../../common/enums\";\n\nconst getSingleCommentEndpoint = [\"GET /comments/commentId\"];\nconst getSingleCommentHeading = \"GET single comments\";\nconst getSingleCommentSubtitle = \"Need to get just one comment?\";\n\nconst SingleComment: FunctionComponent = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n\n  const handleGetSingleCommentsClick = () => {\n    if (state.selectedComment) {\n      dispatch({\n        type: CommentsActionType.GET_COMMENT,\n        payload: { commentId: state.selectedComment.commentId },\n      });\n    }\n  };\n\n  return (\n    <Box mt={12} mb={1}>\n      <TabViewIntroSection\n        endpoints={getSingleCommentEndpoint}\n        heading={getSingleCommentHeading}\n        subtitle={getSingleCommentSubtitle}\n      ></TabViewIntroSection>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Select a comment that you'd like to get.\n        </Typography>\n      </Box>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <CommentSelect></CommentSelect>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={4}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={state.loading || state.selectedComment === undefined}\n          onClick={handleGetSingleCommentsClick}\n        >\n          {state.loading\n            ? \"Please Wait...\"\n            : state.selectedComment === undefined\n            ? \"No Comment\"\n            : \"Get Comment\"}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default SingleComment;\n","import React, { FunctionComponent } from \"react\";\nimport AllComments from \"./AllComments/index\";\nimport SingleComment from \"./SingleComment/index\";\n\nconst GetComment: FunctionComponent = () => {\n  return (\n    <React.Fragment>\n      <AllComments />\n      <SingleComment />\n    </React.Fragment>\n  );\n};\n\nexport default GetComment;\n","import React, {\n  FunctionComponent,\n  useContext,\n  useState,\n  useEffect,\n} from \"react\";\n\nimport TabViewIntroSection from \"../../TabViewIntroSection\";\nimport CommentSelect from \"../../CommentSelect\";\nimport { CommentsContext } from \"../../../context/comments\";\nimport { CommentsActionType } from \"../../../common/enums\";\nimport { Box, Button, Typography, TextareaAutosize } from \"@material-ui/core\";\n\nconst updateComponentEndpoints = [\"PATCH /comments/:commentId\"];\nconst updateComponentHeading = \"Update a comment\";\nconst updateComponentSubtitle = \"Sometimes we need to make some changes.\";\n\nconst UpdateComment: FunctionComponent = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    if (state.selectedComment) {\n      setContent(state.selectedComment.content);\n    }\n  }, [state.selectedComment]);\n\n  const handleContentChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement>\n  ) => {\n    setContent(event.target.value);\n  };\n\n  const handleUpdateCommentClick = () => {\n    if (state.selectedComment) {\n      dispatch({\n        type: CommentsActionType.UPDATE_COMMENT,\n        payload: {\n          commentId: state.selectedComment.commentId,\n          updateCommentDTO: {\n            content,\n          },\n        },\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <TabViewIntroSection\n        endpoints={updateComponentEndpoints}\n        heading={updateComponentHeading}\n        subtitle={updateComponentSubtitle}\n      ></TabViewIntroSection>\n\n      <Box mt={6} mb={1}></Box>\n      <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n        Select a comment that you'd like to update\n      </Typography>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <CommentSelect></CommentSelect>\n      </Box>\n      <Box mt={6}></Box>\n      <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n        What's changed? Write it in the box below.\n      </Typography>\n      <Box display=\"flex\" flexDirection=\"column\" mt={1}>\n        <TextareaAutosize\n          rowsMin={5}\n          rowsMax={5}\n          value={content}\n          onChange={handleContentChange}\n        ></TextareaAutosize>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={4}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={state.loading || state.selectedComment === undefined}\n          onClick={handleUpdateCommentClick}\n        >\n          {state.loading\n            ? \"Please Wait...\"\n            : state.selectedComment === undefined\n            ? \"No Comment\"\n            : \"Update Comment\"}\n        </Button>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default UpdateComment;\n","import React, { FunctionComponent, useContext } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TabViewIntroSection from \"../../TabViewIntroSection\";\nimport CommentSelect from \"../../CommentSelect\";\nimport { CommentsContext } from \"../../../context/comments\";\nimport { CommentsActionType } from \"../../../common/enums\";\n\nconst deleteComponentEndpoints = [\"DELETE /comments/:commentId\"];\nconst deleteComponentHeading = \"Delete a comment\";\nconst deleteComponentSubtitle =\n  \"Then there are those times where deletion is required.\";\n\nconst DeleteComment: FunctionComponent = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n\n  const handleDeleteSingleCommentClick = () => {\n    if (state.selectedComment) {\n      dispatch({\n        type: CommentsActionType.DELETE_COMMENT,\n        payload: { commentId: state.selectedComment.commentId },\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <TabViewIntroSection\n        endpoints={deleteComponentEndpoints}\n        heading={deleteComponentHeading}\n        subtitle={deleteComponentSubtitle}\n      ></TabViewIntroSection>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Select a comment you'd like to delete.\n        </Typography>\n      </Box>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <CommentSelect></CommentSelect>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={4}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={state.loading || state.selectedComment === undefined}\n          onClick={handleDeleteSingleCommentClick}\n        >\n          {state.loading\n            ? \"Please Wait...\"\n            : state.selectedComment === undefined\n            ? \"No Comment\"\n            : \"Delete Comment\"}\n        </Button>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default DeleteComment;\n","import React, { FunctionComponent, useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport TabViewIntroSection from \"../../TabViewIntroSection\";\nimport CommentSelect from \"../../CommentSelect\";\nimport { CommentsContext } from \"../../../context/comments\";\nimport { CommentsActionType } from \"../../../common/enums\";\n\nconst voteComponentEndpoints = [\n  \"PATCH /comments/:commentId/votes/upvote\",\n  \"PATCH /comments/:commentId/votes/downvote\",\n];\nconst voteComponentHeading = \"Vote on a comment\";\nconst voteComponentSubtitle =\n  \"Was a really good comment? Show your appreciation.\";\n\nconst voteTypes = [\"Upvote\", \"Downvote\"];\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    display: \"grid\",\n  },\n}));\n\nconst VoteComment: FunctionComponent = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n  const [selectedVoteType, setSelectedVoteType] = useState(voteTypes[0]);\n\n  const classes = useStyles();\n\n  const handleVoteSingleCommentClick = () => {\n    const type =\n      selectedVoteType === voteTypes[0]\n        ? CommentsActionType.UPVOTE_COMMENT\n        : CommentsActionType.DOWNVOTE_COMMENT;\n\n    dispatch({\n      type,\n      payload: { commentId: state.selectedComment?.commentId },\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <TabViewIntroSection\n        endpoints={voteComponentEndpoints}\n        heading={voteComponentHeading}\n        subtitle={voteComponentSubtitle}\n      ></TabViewIntroSection>\n      <Box mt={6} mb={1}></Box>\n      <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n        Select a comment that you'd like to vote on.\n      </Typography>\n      <Box mb={1}></Box>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <CommentSelect></CommentSelect>\n      </Box>\n      <Box mt={6}></Box>\n      <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n        Select a vote type you'd like to add to a comment.\n      </Typography>\n      <Box mb={1}></Box>\n      <Grid container spacing={2}>\n        {voteTypes.map((voteType) => {\n          return (\n            <Grid className={classes.root} item xs={6} key={voteType}>\n              <Button\n                variant={\n                  selectedVoteType === voteType ? \"contained\" : \"outlined\"\n                }\n                onClick={() => setSelectedVoteType(voteType)}\n              >\n                {voteType}\n              </Button>\n            </Grid>\n          );\n        })}\n      </Grid>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={4}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={state.loading || state.selectedComment === undefined}\n          onClick={handleVoteSingleCommentClick}\n        >\n          {state.loading\n            ? \"Please Wait...\"\n            : state.selectedComment === undefined\n            ? \"No Comment\"\n            : selectedVoteType === voteTypes[0]\n            ? \"Upvote Comment\"\n            : \"Downvote Comment\"}\n        </Button>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default VoteComment;\n","import React, { FunctionComponent, useContext } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport TabViewIntroSection from \"../../TabViewIntroSection\";\nimport CommentSelect from \"../../CommentSelect\";\nimport { CommentsContext } from \"../../../context/comments\";\nimport { CommentsActionType } from \"../../../common/enums\";\n\nconst flagComponentEndpoints = [\"PATCH /comments/:commentId/flag\"];\nconst flagComponentHeading = \"Flag a comment\";\nconst flagComponentSubtitle = \"Didn’t like a comment? Do something about it.\";\n\nconst FlagComment: FunctionComponent = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n\n  const handleFlagSingleCommentClick = () => {\n    if (state.selectedComment) {\n      dispatch({\n        type: CommentsActionType.FLAG_COMMENT,\n        payload: { commentId: state.selectedComment.commentId },\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <TabViewIntroSection\n        endpoints={flagComponentEndpoints}\n        heading={flagComponentHeading}\n        subtitle={flagComponentSubtitle}\n      ></TabViewIntroSection>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Select a comment you'd like to flag.\n        </Typography>\n      </Box>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <CommentSelect></CommentSelect>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={4}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={state.loading || state.selectedComment === undefined}\n          onClick={handleFlagSingleCommentClick}\n        >\n          {state.loading\n            ? \"Please Wait...\"\n            : state.selectedComment === undefined\n            ? \"No Comment\"\n            : \"Flag Comment\"}\n        </Button>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default FlagComment;\n","import React, { FunctionComponent, useContext } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Comment from \"../Comment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CommentsContext } from \"../../context/comments\";\n\nconst useStyles = makeStyles({\n  button: {\n    justifyContent: \"flex-end\",\n  },\n  dialogContentSubtitle: {\n    overflowY: \"visible\",\n  },\n});\n\ntype CallBackFunction = () => void;\ntype CommentDialogProps = {\n  isOpen?: boolean;\n  handleOk: CallBackFunction;\n  title?: string;\n  subtitle?: string;\n  okLabel?: string;\n};\n\nconst CommentDialog: FunctionComponent<CommentDialogProps> = ({\n  isOpen = false,\n  handleOk,\n  title = \"Title\",\n  subtitle = \"Subtitle\",\n  okLabel = \"Ok\",\n}) => {\n  const state = useContext(CommentsContext)[0];\n  const classes = useStyles();\n\n  const getRepliesForComment = (commentId: string) => {\n    return state.replies.filter((reply) => reply.commentId === commentId);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={isOpen}\n        onClose={handleOk}\n        scroll=\"paper\"\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\">{title}</DialogTitle>\n        <DialogContent className={classes.dialogContentSubtitle}>\n          <DialogContentText>{subtitle}</DialogContentText>\n        </DialogContent>\n        <DialogContent dividers>\n          <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1}>\n            {state.comments.map((comment, index) => {\n              const selectedComment = () => {\n                if (comment.commentId !== state.selectedComment?.commentId) {\n                  return null;\n                }\n\n                return (\n                  <Box py={1} key={comment.commentId}>\n                    <Typography variant=\"h6\">{`Comment ${\n                      index + 1\n                    }`}</Typography>\n                    <Box mb={1}></Box>\n                    <Comment\n                      key={comment.commentId}\n                      comment={comment}\n                      replies={getRepliesForComment(comment.commentId)}\n                    />\n                  </Box>\n                );\n              };\n              const allComments = () => (\n                <Box py={1} key={comment.commentId}>\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                  >\n                    <Typography variant=\"h6\">{`Comment ${\n                      index + 1\n                    }`}</Typography>\n                    <Box py={1}></Box>\n                    {state.selectedComment?.commentId === comment.commentId ? (\n                      <Typography variant=\"body1\" color=\"secondary\">\n                        Current Selection\n                      </Typography>\n                    ) : (\n                      <div></div>\n                    )}\n                  </Box>\n                  <Box mb={1}></Box>\n                  <Comment\n                    key={comment.commentId}\n                    comment={comment}\n                    replies={getRepliesForComment(comment.commentId)}\n                  />\n                </Box>\n              );\n\n              if (state.isSelectedCommentDialogOpen && state.selectedComment) {\n                return selectedComment();\n              } else {\n                return allComments();\n              }\n            })}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\n            <Button\n              className={classes.button}\n              color=\"secondary\"\n              fullWidth={true}\n              onClick={handleOk}\n            >\n              {okLabel}\n            </Button>\n          </Box>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default CommentDialog;\n","import React, { useContext } from \"react\";\nimport { Box, Button, makeStyles } from \"@material-ui/core\";\nimport { CommentsContext } from \"../../context/comments\";\nimport CommentDialog from \"../CommentDialog\";\nimport CommentsActionType from \"../../common/enums/comments-action-type\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"fixed\",\n    width: \"100%\",\n    bottom: 0,\n    zIndex: 100,\n    backgroundImage:\n      \"linear-gradient(to top, rgba(35, 57, 255, 0.5) 10%, rgba(0, 0, 0, 0.3)) 90%\",\n  },\n});\n\nconst StateFooter = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n  const [open, setOpen] = React.useState(false);\n\n  const handleViewState = () => setOpen(true);\n\n  // const handleResetState = () => {\n  //   dispatch({\n  //     type: CommentsActionType.RESET_STATE,\n  //   });\n  // };\n\n  const handleOk = () => {\n    if (state.isSelectedCommentDialogOpen) {\n      dispatch({\n        type: CommentsActionType.SET_SELECTED_COMMENT_DIALOG_OPEN,\n        payload: { isOpen: false },\n      });\n    }\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Box display=\"flex\" justifyContent=\"space-between\" p={2}>\n        <Button onClick={handleViewState}>View Current State</Button>\n        <div></div>\n        {/* <Button onClick={handleResetState} disabled>\n          Reset State\n        </Button> */}\n      </Box>\n      <Box>\n        <CommentDialog\n          isOpen={open || state.isSelectedCommentDialogOpen}\n          handleOk={handleOk}\n          title={\"Current State\"}\n          subtitle={\n            state.isSelectedCommentDialogOpen\n              ? \"The current state of your selected comment and its replies.\"\n              : \"The curent state of your comments and replies.\"\n          }\n          okLabel={\"Close\"}\n        />\n      </Box>\n    </div>\n  );\n};\n\nexport default StateFooter;\n","import React, { FunctionComponent } from \"react\";\nimport { Box, CircularProgress } from \"@material-ui/core\";\n\nconst LoadingScreen: FunctionComponent = () => {\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      width=\"100%\"\n      height=\"50vh\"\n    >\n      <CircularProgress color=\"secondary\" />\n    </Box>\n  );\n};\n\nexport default LoadingScreen;\n","import React, { FunctionComponent, ReactElement, useContext } from \"react\";\nimport TabPanel from \"../TabPanel\";\nimport CreateComment from \"./CreateComment\";\nimport GetComment from \"./GetComment\";\nimport UpdateComment from \"./UpdateComment\";\nimport DeleteComment from \"./DeleteComment\";\nimport VoteComment from \"./VoteComment\";\nimport FlagComment from \"./FlagComment\";\nimport StateFooter from \"../StateFooter\";\nimport LoadingScreen from \"../LoadingScreen\";\nimport { CommentsContext } from \"../../context/comments\";\n\nexport const tabLabels: string[] = [\n  \"Comment Create\",\n  \"Comment Get\",\n  \"Comment Update\",\n  \"Comment Delete\",\n  \"Comment Vote\",\n  \"Comment Flag\",\n];\n\nexport const tabViews: ReactElement[] = [\n  <CreateComment />,\n  <GetComment />,\n  <UpdateComment />,\n  <DeleteComment />,\n  <VoteComment />,\n  <FlagComment />,\n];\n\ntype CommentsProps = {\n  tabValueState: [number, React.Dispatch<React.SetStateAction<number>>];\n};\n\nconst Comments: FunctionComponent<CommentsProps> = ({ tabValueState }) => {\n  const state = useContext(CommentsContext)[0];\n\n  return (\n    <React.Fragment>\n      {!state.commentsLoaded && state.loading ? (\n        <LoadingScreen></LoadingScreen>\n      ) : (\n        state.commentsLoaded &&\n        tabViews.map((element, index) => {\n          return (\n            <TabPanel\n              key={tabLabels[index]}\n              tabIndex={index}\n              activeTabIndex={tabValueState[0]}\n            >\n              {element}\n            </TabPanel>\n          );\n        })\n      )}\n      <StateFooter />\n    </React.Fragment>\n  );\n};\n\nexport default Comments;\n","import React, { FunctionComponent, useContext } from \"react\";\nimport { Box, Typography, TextareaAutosize, Button } from \"@material-ui/core\";\nimport TabViewIntroSection from \"../../TabViewIntroSection\";\nimport CommentSelect from \"../../CommentSelect\";\nimport { CommentsContext } from \"../../../context/comments\";\nimport { CommentsActionType } from \"../../../common/enums\";\n\nconst createComponentEndpoints = [\"POST /comments/:commentId/replies\"];\nconst createComponentHeading = \"Create a reply\";\nconst createComponentSubtitle = \"Comments can always be responded to.\";\n\nconst CreateReply: FunctionComponent = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n  let content = \"\";\n\n  const handleContentChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement>\n  ) => {\n    content = event.target.value;\n  };\n\n  const handleCreateReplyClick = () => {\n    dispatch({\n      type: CommentsActionType.CREATE_REPLY,\n      payload: {\n        commentId: state.selectedComment?.commentId,\n        createReplyDTO: { content },\n      },\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <TabViewIntroSection\n        endpoints={createComponentEndpoints}\n        heading={createComponentHeading}\n        subtitle={createComponentSubtitle}\n      ></TabViewIntroSection>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Select a comment you'd like to create a reply for.\n        </Typography>\n      </Box>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <CommentSelect></CommentSelect>\n      </Box>\n      <Box mt={6}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          What are you thinking about? Write it in the box below.\n        </Typography>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" mt={1}>\n        <TextareaAutosize\n          rowsMin={5}\n          rowsMax={5}\n          onChange={handleContentChange}\n        ></TextareaAutosize>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={4}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={state.loading || state.selectedComment === undefined}\n          onClick={handleCreateReplyClick}\n        >\n          {state.loading ? \"Please Wait...\" : \"Create Reply\"}\n        </Button>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default CreateReply;\n","import React, { FunctionComponent, useState, useContext } from \"react\";\nimport {\n  Box,\n  Button,\n  Grid,\n  makeStyles,\n  Typography,\n  FormControl,\n  Select,\n  FormHelperText,\n  MenuItem,\n} from \"@material-ui/core\";\nimport TabViewIntroSection from \"../../../TabViewIntroSection\";\nimport CommentSelect from \"../../../CommentSelect\";\nimport { CommentsContext } from \"../../../../context/comments\";\nimport { CommentsActionType } from \"../../../../common/enums\";\n\nconst getAllReplyEndpoint = [\"GET /comments/:commentId/replies\"];\nconst getAllReplyHeading = \"GET all replies\";\nconst getAllReplySubtitle = \"Need to get some replies?\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst NO_STATE = 0;\nconst FLAGGED_STATE = 1;\nconst UNFLAGGED_STATE = 2;\nconst ALL_OWNERS = \"\";\nconst NO_SORT = \"\";\nconst NO_PAGE = \"\";\n\nconst AllReplies: FunctionComponent = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n  const [flagState, setFlagState] = useState(NO_STATE);\n  const [ownerId, setOwnerId] = useState(ALL_OWNERS);\n  const [sort, setSort] = useState(NO_SORT);\n  const [page, setPage] = useState(NO_PAGE);\n\n  const classes = useStyles();\n\n  const handleSelectedFlagStateChange = (event: React.ChangeEvent<any>) => {\n    setFlagState(event.target.value);\n  };\n\n  const handleSelectedOwnerIdChange = (event: React.ChangeEvent<any>) => {\n    setOwnerId(event.target.value);\n  };\n\n  const handleSelectedSortChange = (event: React.ChangeEvent<any>) => {\n    setSort(event.target.value);\n  };\n\n  const handleSelectedPageChange = (event: React.ChangeEvent<any>) => {\n    setPage(event.target.value);\n  };\n\n  const handleGetAllRepliesClick = () => {\n    let _isFlagged;\n    let _ownerId;\n    let _sort;\n    let _page;\n\n    if (state.selectedComment) {\n      if (flagState !== NO_STATE) {\n        _isFlagged = flagState === FLAGGED_STATE;\n      }\n\n      if (ownerId !== ALL_OWNERS) {\n        _ownerId = ownerId;\n      }\n\n      if (sort !== NO_SORT) {\n        _sort = sort;\n      }\n\n      if (page !== NO_PAGE) {\n        _page = page;\n      }\n\n      dispatch({\n        type: CommentsActionType.GET_ALL_REPLIES,\n        payload: {\n          commentId: state.selectedComment.commentId,\n          pageQuery: {\n            isFlagged: _isFlagged,\n            ownerId: _ownerId,\n            sort: _sort,\n            page: _page,\n          },\n        },\n      });\n    }\n  };\n\n  return (\n    <Box>\n      <TabViewIntroSection\n        endpoints={getAllReplyEndpoint}\n        heading={getAllReplyHeading}\n        subtitle={getAllReplySubtitle}\n      ></TabViewIntroSection>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Select a comment to access for its replies.\n        </Typography>\n      </Box>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <CommentSelect></CommentSelect>\n      </Box>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Need to filter, sort, or paginate on a list of replies? No problem.\n        </Typography>\n      </Box>\n      <Grid container spacing={2}>\n        <Grid className={classes.root} item xs={6}>\n          <FormControl className={classes.formControl}>\n            <Select\n              value={flagState}\n              onChange={handleSelectedFlagStateChange}\n              displayEmpty\n              className={classes.selectEmpty}\n              inputProps={{ \"aria-label\": \"selected flag state\" }}\n            >\n              <MenuItem value={NO_STATE}>All</MenuItem>\n              <MenuItem value={FLAGGED_STATE}>Flagged</MenuItem>\n              <MenuItem value={UNFLAGGED_STATE}>Unflagged</MenuItem>\n            </Select>\n            <FormHelperText>By Flag State</FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid className={classes.root} item xs={6}>\n          <FormControl className={classes.formControl}>\n            <Select\n              value={ownerId}\n              onChange={handleSelectedOwnerIdChange}\n              displayEmpty\n              className={classes.selectEmpty}\n              inputProps={{ \"aria-label\": \"selected owner ID\" }}\n            >\n              <MenuItem value={ALL_OWNERS}>All</MenuItem>\n              <MenuItem value=\"you@gmail.com\">you@gmail.com</MenuItem>\n            </Select>\n            <FormHelperText>By Owner ID</FormHelperText>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Or do you need to sort or paginate on a list of replies? It's still\n          not a problem.\n        </Typography>\n      </Box>\n      <Grid container spacing={2}>\n        <Grid className={classes.root} item xs={6}>\n          <FormControl className={classes.formControl}>\n            <Select\n              value={sort}\n              onChange={handleSelectedSortChange}\n              displayEmpty\n              className={classes.selectEmpty}\n              inputProps={{ \"aria-label\": \"selected sort\" }}\n            >\n              <MenuItem value={NO_SORT}>None</MenuItem>\n              <MenuItem value=\"asc\">Ascending</MenuItem>\n              <MenuItem value=\"desc\">Descending</MenuItem>\n            </Select>\n            <FormHelperText>Sort</FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid className={classes.root} item xs={6}>\n          <FormControl className={classes.formControl}>\n            <Select\n              value={page}\n              onChange={handleSelectedPageChange}\n              displayEmpty\n              className={classes.selectEmpty}\n              inputProps={{ \"aria-label\": \"selected page\" }}\n            >\n              <MenuItem value={NO_PAGE}>None</MenuItem>\n            </Select>\n            <FormHelperText>Page</FormHelperText>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={6}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={\n            state.loading ||\n            state.selectedComment === undefined ||\n            state.selectedComment?.numOfReplies === 0\n          }\n          onClick={handleGetAllRepliesClick}\n        >\n          {state.loading\n            ? \"Please Wait...\"\n            : state.selectedComment?.numOfReplies === 0\n            ? \"No Reply\"\n            : \"Get All Replies\"}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AllReplies;\n","import React, { FunctionComponent, useContext } from \"react\";\nimport {\n  Box,\n  Typography,\n  FormHelperText,\n  FormControl,\n  Select,\n  MenuItem,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Reply } from \"../../common/models\";\nimport { CommentsContext } from \"../../context/comments\";\nimport { CommentsActionType } from \"../../common/enums\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst ReplySelect: FunctionComponent = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n\n  const classes = useStyles();\n\n  const handleSelectedReplyChange = (event: React.ChangeEvent<any>) => {\n    dispatch({\n      type: CommentsActionType.SET_SELECTED_REPLY,\n      payload: { replyId: event.target.value },\n    });\n  };\n\n  return (\n    <React.Fragment>\n      {state.selectedComment ? (\n        <FormControl className={classes.formControl}>\n          <Select\n            value={state.selectedReply?.replyId ?? \"\"}\n            onChange={handleSelectedReplyChange}\n            displayEmpty\n            className={classes.selectEmpty}\n            inputProps={{ \"aria-label\": \"selected reply ID\" }}\n          >\n            {state.selectedCommentReplies &&\n            state.selectedCommentReplies?.length > 0 ? (\n              state.selectedCommentReplies.map((reply: Reply) => {\n                return (\n                  <MenuItem value={reply.replyId} key={reply.replyId}>\n                    {reply.replyId.slice(0, 7)}\n                  </MenuItem>\n                );\n              })\n            ) : (\n              <MenuItem value=\"No Reply\">No Reply</MenuItem>\n            )}\n          </Select>\n          <FormHelperText>Selected Reply</FormHelperText>\n        </FormControl>\n      ) : (\n        <Box display=\"flex\" justifyContent=\"center\">\n          <Typography variant=\"overline\" align=\"center\">\n            A SELECTED COMMENT IS REQURED\n          </Typography>\n        </Box>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ReplySelect;\n","import React, { FunctionComponent, useContext } from \"react\";\nimport { Box, Button, Typography } from \"@material-ui/core\";\nimport TabViewIntroSection from \"../../../TabViewIntroSection\";\nimport { CommentsContext } from \"../../../../context/comments\";\nimport { CommentsActionType } from \"../../../../common/enums\";\nimport CommentSelect from \"../../../CommentSelect\";\nimport ReplySelect from \"../../../ReplySelect\";\n\nconst getSingleReplyEndpoint = [\"GET /comments/:commentId/replies/:replyId\"];\nconst getSingleReplyHeading = \"GET a single reply\";\nconst getSingleReplySubtitle = \"Need to get a specific reply?\";\n\nconst SingleReply: FunctionComponent = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n\n  const handleGetSingleReplyClick = () => {\n    if (state.selectedComment && state.selectedReply) {\n      dispatch({\n        type: CommentsActionType.GET_REPLY,\n        payload: {\n          commentId: state.selectedComment.commentId,\n          replyId: state.selectedReply.replyId,\n        },\n      });\n    }\n  };\n\n  return (\n    <Box mt={12} mb={1}>\n      <TabViewIntroSection\n        endpoints={getSingleReplyEndpoint}\n        heading={getSingleReplyHeading}\n        subtitle={getSingleReplySubtitle}\n      ></TabViewIntroSection>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Select a comment to access for its replies.\n        </Typography>\n      </Box>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <CommentSelect></CommentSelect>\n      </Box>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Select a reply you'd like to update.\n        </Typography>\n      </Box>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <ReplySelect></ReplySelect>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={4}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={\n            state.loading ||\n            state.selectedComment === undefined ||\n            state.selectedReply === undefined\n          }\n          onClick={handleGetSingleReplyClick}\n        >\n          {state.loading\n            ? \"Please Wait...\"\n            : state.selectedReply === undefined\n            ? \"No Reply\"\n            : \"Get Reply\"}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default SingleReply;\n","import React, { FunctionComponent } from \"react\";\nimport AllReplies from \"./AllReplies\";\nimport SingleReply from \"./SingleReply\";\n\n\nconst GetReply: FunctionComponent = () => {\n  return (\n    <React.Fragment>\n      <AllReplies />\n      <SingleReply />\n    </React.Fragment>\n  );\n};\n\nexport default GetReply;\n","import React, {\n  FunctionComponent,\n  useContext,\n  useState,\n  useEffect,\n} from \"react\";\nimport { Box, Button, TextareaAutosize, Typography } from \"@material-ui/core\";\nimport TabViewIntroSection from \"../../TabViewIntroSection\";\nimport CommentSelect from \"../../CommentSelect\";\nimport ReplySelect from \"../../ReplySelect\";\nimport { CommentsContext } from \"../../../context/comments\";\nimport { CommentsActionType } from \"../../../common/enums\";\n\nconst updateComponentEndpoints = [\n  \"PATCH /comments/:commentId/replies/:replyId\",\n];\nconst updateComponentHeading = \"Update a reply\";\nconst updateComponentSubtitle = \"Sometimes we need to make some changes.\";\n\nconst UpdateReply: FunctionComponent = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    if (state.selectedReply) {\n      setContent(state.selectedReply.content);\n    }\n  }, [state.selectedReply]);\n\n  const handleContentChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement>\n  ) => {\n    setContent(event.target.value);\n  };\n\n  const handleUpdateSingleReplyClick = () => {\n    if (state.selectedComment && state.selectedReply) {\n      dispatch({\n        type: CommentsActionType.UPDATE_REPLY,\n        payload: {\n          commentId: state.selectedComment.commentId,\n          replyId: state.selectedReply.replyId,\n          updateReplyDTO: { content },\n        },\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <TabViewIntroSection\n        endpoints={updateComponentEndpoints}\n        heading={updateComponentHeading}\n        subtitle={updateComponentSubtitle}\n      ></TabViewIntroSection>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Select a comment to access for its replies.\n        </Typography>\n      </Box>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <CommentSelect></CommentSelect>\n      </Box>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Select a reply you'd like to update.\n        </Typography>\n      </Box>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <ReplySelect></ReplySelect>\n      </Box>\n      <Box mt={6}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Didn't respond exactly how you liked? Make a update.\n        </Typography>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" mt={1}>\n        <TextareaAutosize\n          rowsMin={5}\n          rowsMax={5}\n          value={content}\n          onChange={handleContentChange}\n        ></TextareaAutosize>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={4}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={state.loading || state.selectedReply === undefined}\n          onClick={handleUpdateSingleReplyClick}\n        >\n          {state.loading\n            ? \"Please Wait...\"\n            : state.selectedReply === undefined\n            ? \"No Reply\"\n            : \"Update Reply\"}\n        </Button>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default UpdateReply;\n","import React, { FunctionComponent, useContext } from \"react\";\nimport { Box, Button, Typography } from \"@material-ui/core\";\nimport TabViewIntroSection from \"../../TabViewIntroSection\";\nimport CommentSelect from \"../../CommentSelect\";\nimport ReplySelect from \"../../ReplySelect\";\nimport { CommentsContext } from \"../../../context/comments\";\nimport { CommentsActionType } from \"../../../common/enums\";\n\nconst deleteComponentEndpoints = [\n  \"DELETE /comments/:commentId/replies/:replyId\",\n];\nconst deleteComponentHeading = \"Delete a reply\";\nconst deleteComponentSubtitle =\n  \"Then there are those times where deletion is required.\";\n\nconst DeleteReply: FunctionComponent = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n\n  const handleDeleteSingleReplyClick = () => {\n    if (state.selectedComment && state.selectedReply) {\n      dispatch({\n        type: CommentsActionType.DELETE_REPLY,\n        payload: {\n          commentId: state.selectedComment.commentId,\n          replyId: state.selectedReply.replyId,\n        },\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <TabViewIntroSection\n        endpoints={deleteComponentEndpoints}\n        heading={deleteComponentHeading}\n        subtitle={deleteComponentSubtitle}\n      ></TabViewIntroSection>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Select a comment to access for its replies.\n        </Typography>\n      </Box>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <CommentSelect></CommentSelect>\n      </Box>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Select a reply you'd like to delete.\n        </Typography>\n      </Box>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <ReplySelect></ReplySelect>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={4}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={\n            state.loading ||\n            state.selectedComment === undefined ||\n            state.selectedReply === undefined\n          }\n          onClick={handleDeleteSingleReplyClick}\n        >\n          {state.loading\n            ? \"Please Wait...\"\n            : state.selectedReply === undefined\n            ? \"No Reply\"\n            : \"Delete Reply\"}\n        </Button>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default DeleteReply;\n","import React, { FunctionComponent, useState, useContext } from \"react\";\nimport { Box, Button, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport TabViewIntroSection from \"../../TabViewIntroSection\";\nimport { CommentsContext } from \"../../../context/comments\";\nimport { CommentsActionType } from \"../../../common/enums\";\nimport CommentSelect from \"../../CommentSelect\";\nimport ReplySelect from \"../../ReplySelect\";\n\nconst voteComponentEndpoints = [\n  \"PATCH /comments/:commentId/replies/:replyId/votes/upvote\",\n  \"PATCH /comments/:commentId/replies/:replyId/votes/downvote\",\n];\nconst voteComponentHeading = \"Vote on a reply\";\nconst voteComponentSubtitle =\n  \"Was it a really good reply? Show your appreciation.\";\n\nconst voteTypes = [\"Upvote\", \"Downvote\"];\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    display: \"grid\",\n  },\n});\n\nconst VoteReply: FunctionComponent = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n  const [selectedVoteType, setSelectedVoteType] = useState(voteTypes[0]);\n\n  const classes = useStyles();\n\n  const handleVoteSingleReplyClick = () => {\n    if (state.selectedComment && state.selectedReply) {\n      const type =\n        selectedVoteType === voteTypes[0]\n          ? CommentsActionType.UPVOTE_REPLY\n          : CommentsActionType.DOWNVOTE_REPLY;\n\n      dispatch({\n        type,\n        payload: {\n          commentId: state.selectedComment.commentId,\n          replyId: state.selectedReply.replyId,\n        },\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <TabViewIntroSection\n        endpoints={voteComponentEndpoints}\n        heading={voteComponentHeading}\n        subtitle={voteComponentSubtitle}\n      ></TabViewIntroSection>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Select a comment to access for its replies.\n        </Typography>\n      </Box>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <CommentSelect></CommentSelect>\n      </Box>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Select a reply you'd like to vote on.\n        </Typography>\n      </Box>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <ReplySelect></ReplySelect>\n      </Box>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Select the vote type you'd like to make on the reply.\n        </Typography>\n      </Box>\n      <Grid container spacing={2}>\n        {voteTypes.map((voteType) => {\n          return (\n            <Grid className={classes.root} item xs={6} key={voteType}>\n              <Button\n                variant={\n                  selectedVoteType === voteType ? \"contained\" : \"outlined\"\n                }\n                onClick={() => setSelectedVoteType(voteType)}\n              >\n                {voteType}\n              </Button>\n            </Grid>\n          );\n        })}\n      </Grid>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={4}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={\n            state.loading ||\n            state.selectedComment === undefined ||\n            state.selectedReply === undefined\n          }\n          onClick={handleVoteSingleReplyClick}\n        >\n          {state.loading\n            ? \"Please Wait...\"\n            : state.selectedReply === undefined\n            ? \"No Reply\"\n            : selectedVoteType === voteTypes[0]\n            ? \"Upvote Reply\"\n            : \"Downvote Reply\"}\n        </Button>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default VoteReply;\n","import React, { FunctionComponent, useContext } from \"react\";\nimport { Box, Button, Typography } from \"@material-ui/core\";\nimport TabViewIntroSection from \"../../TabViewIntroSection\";\nimport { CommentsContext } from \"../../../context/comments\";\nimport CommentSelect from \"../../CommentSelect\";\nimport ReplySelect from \"../../ReplySelect\";\nimport { CommentsActionType } from \"../../../common/enums\";\n\nconst flagComponentEndpoints = [\n  \"PATCH /comments/:commentId/replies/:replyId/flag\",\n];\nconst flagComponentHeading = \"Flag a reply\";\nconst flagComponentSubtitle = \"Didn’t like a reply? Do something about it.\";\n\nconst FlagReply: FunctionComponent = () => {\n  const [state, dispatch] = useContext(CommentsContext);\n\n  const handleFlagSingleReplyClick = () => {\n    if (state.selectedComment && state.selectedReply) {\n      dispatch({\n        type: CommentsActionType.FLAG_REPLY,\n        payload: {\n          commentId: state.selectedComment.commentId,\n          replyId: state.selectedReply.replyId,\n        },\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <TabViewIntroSection\n        endpoints={flagComponentEndpoints}\n        heading={flagComponentHeading}\n        subtitle={flagComponentSubtitle}\n      ></TabViewIntroSection>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Select a comment to access for its replies.\n        </Typography>\n      </Box>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <CommentSelect></CommentSelect>\n      </Box>\n      <Box mt={6} mb={1}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Select a reply you'd like to flag.\n        </Typography>\n      </Box>\n      <Box mb={1} display=\"flex\" justifyContent=\"center\">\n        <ReplySelect></ReplySelect>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={4}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={\n            state.loading ||\n            state.selectedComment === undefined ||\n            state.selectedReply === undefined\n          }\n          onClick={handleFlagSingleReplyClick}\n        >\n          {state.loading\n            ? \"Please Wait...\"\n            : state.selectedReply === undefined\n            ? \"No Reply\"\n            : \"Flag Reply\"}\n        </Button>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default FlagReply;\n","import React, { FunctionComponent, ReactElement, useContext } from \"react\";\nimport TabPanel from \"../TabPanel\";\nimport CreateReply from \"./CreateReply\";\nimport GetReply from \"./GetReply\";\nimport UpdateReply from \"./UpdateReply\";\nimport DeleteReply from \"./DeleteReply\";\nimport VoteReply from \"./VoteReply\";\nimport FlagReply from \"./FlagReply\";\nimport StateFooter from \"../StateFooter\";\nimport LoadingScreen from \"../LoadingScreen\";\nimport { CommentsContext } from \"../../context/comments\";\n\nexport const tabLabels: string[] = [\n  \"Reply Create\",\n  \"Reply Get\",\n  \"Reply Update\",\n  \"Reply Delete\",\n  \"Reply Vote\",\n  \"Reply Flag\",\n];\n\nexport const tabViews: ReactElement[] = [\n  <CreateReply />,\n  <GetReply />,\n  <UpdateReply />,\n  <DeleteReply />,\n  <VoteReply />,\n  <FlagReply />,\n];\n\ntype RepliesProps = {\n  tabValueState: [number, React.Dispatch<React.SetStateAction<number>>];\n};\n\nconst Replies: FunctionComponent<RepliesProps> = ({ tabValueState }) => {\n  const state = useContext(CommentsContext)[0];\n\n  return (\n    <React.Fragment>\n      {!state.repliesLoaded && state.loading ? (\n        <LoadingScreen></LoadingScreen>\n      ) : (\n        state.repliesLoaded &&\n        tabViews.map((element, index) => {\n          return (\n            <TabPanel\n              key={tabLabels[index]}\n              tabIndex={index}\n              activeTabIndex={tabValueState[0]}\n            >\n              {element}\n            </TabPanel>\n          );\n        })\n      )}\n      <StateFooter />\n    </React.Fragment>\n  );\n};\n\nexport default Replies;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#FFFFFF\",\n    },\n    secondary: {\n      main: \"#2339FF\",\n    },\n  },\n  typography: {\n    fontFamily: \"Rosario\",\n    fontSize: 13,\n    button: {\n      textTransform: \"none\",\n    },\n  },\n  shape: {\n    borderRadius: 8,\n  },\n  overrides: {\n    MuiCssBaseline: {\n      \"@global\": {\n        body: {\n          backgroundColor: \"white\",\n        },\n        html: {\n          overflow: \"-moz-scrollbars-vertical\",\n          overflowY: \"scroll\",\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n","import { useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../common/enums\";\nimport { Route } from \"../../common/models\";\n\n// Hook to keep track of the current route path.\nconst useCurrentRoute = () => {\n  const location = useLocation();\n\n  switch (location.pathname) {\n    case RoutePath.Comments:\n      return new Route(RoutePath.Comments);\n\n    case RoutePath.Replies:\n      return new Route(RoutePath.Replies);\n\n    case RoutePath.Home:\n    default:\n      return new Route(RoutePath.Home);\n  }\n};\n\nexport default useCurrentRoute;\n","import { RoutePath } from \"../../common/enums\";\nimport { Route } from \"../../common/models\";\n\nexport const commentTabLabels: string[] = [\n  \"Comment Create\",\n  \"Comment Get\",\n  \"Comment Update\",\n  \"Comment Delete\",\n  \"Comment Vote\",\n  \"Comment Flag\",\n];\n\nexport const repliesTabLabels: string[] = [\n  \"Reply Create\",\n  \"Reply Get\",\n  \"Reply Update\",\n  \"Reply Delete\",\n  \"Reply Vote\",\n  \"Reply Flag\",\n];\n\nconst useCurrentTabs = (route: Route): [string[], boolean] => {\n  let tabsAvailable = true;\n  let currentTabsLabels: string[];\n\n  if (route.path === RoutePath.Comments) {\n    currentTabsLabels = commentTabLabels;\n  } else if (route.path === RoutePath.Replies) {\n    currentTabsLabels = repliesTabLabels;\n  } else {\n    currentTabsLabels = [];\n    tabsAvailable = false;\n  }\n\n  return [currentTabsLabels, tabsAvailable];\n};\n\nexport default useCurrentTabs;\n","import React, { useState } from \"react\";\nimport { Route } from \"../../common/models\";\nimport { RoutePath } from \"../../common/enums\";\n\nconst useCurrentTabsValue = (\n  route: Route\n): [number, React.Dispatch<React.SetStateAction<number>>] => {\n  const [commentsTabsValue, setCommentsTabsValue] = useState(0);\n  const [repliesTabsValue, setRepliesTabsValue] = useState(0);\n\n  let currentTabsValue: number;\n  let setCurrentTabsValue: React.Dispatch<React.SetStateAction<number>>;\n\n  if (route.path === RoutePath.Comments) {\n    currentTabsValue = commentsTabsValue;\n    setCurrentTabsValue = setCommentsTabsValue;\n  } else if (route.path === RoutePath.Replies) {\n    currentTabsValue = repliesTabsValue;\n    setCurrentTabsValue = setRepliesTabsValue;\n  } else {\n    currentTabsValue = 0;\n    setCurrentTabsValue = () => null;\n  }\n\n  return [currentTabsValue, setCurrentTabsValue];\n};\n\nexport default useCurrentTabsValue;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { ThemeProvider, makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Home from \"../Home/index\";\nimport CustomAppBar from \"./CustomAppBar\";\nimport CustomTabBar from \"./CustomTabBar\";\nimport Comments from \"../Comments/index\";\nimport Replies from \"../Replies/index\";\nimport theme from \"../../theme\";\nimport useCurrentRoute from \"../../hooks/useCurrentRoute\";\nimport { CommentsContextProvider } from \"../../context/comments\";\nimport { RoutePath } from \"../../common/enums\";\nimport useCurrentTabs from \"../../hooks/useCurrentTabs\";\nimport useCurrentTabsValue from \"../../hooks/useCurrentTabsValue\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const currentRoute = useCurrentRoute();\n  const [currentTabsLabels, tabsAvailable] = useCurrentTabs(currentRoute);\n  const tabValueState = useCurrentTabsValue(currentRoute);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        <CustomAppBar currentRoute={currentRoute}>\n          {tabsAvailable && (\n            <CustomTabBar\n              tabLabels={currentTabsLabels}\n              tabValueState={tabValueState}\n            ></CustomTabBar>\n          )}\n        </CustomAppBar>\n        <CommentsContextProvider>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to={RoutePath.Home} />\n            </Route>\n            <Route exact path={RoutePath.Home}>\n              <Home />\n            </Route>\n            <Route path={RoutePath.Comments}>\n              <Comments tabValueState={tabValueState} />\n            </Route>\n            <Route path={RoutePath.Replies}>\n              <Replies tabValueState={tabValueState} />\n            </Route>\n          </Switch>\n        </CommentsContextProvider>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App/index\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}